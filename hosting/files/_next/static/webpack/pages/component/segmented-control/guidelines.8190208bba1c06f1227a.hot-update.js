webpackHotUpdate_N_E("pages/component/segmented-control/guidelines",{

/***/ "./pages/component/segmented-control/guidelines.mdx":
/*!**********************************************************!*\
  !*** ./pages/component/segmented-control/guidelines.mdx ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MDXContent; });\n/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ \"../node_modules/@babel/runtime/helpers/esm/extends.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutProperties */ \"../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"../node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @mdx-js/react */ \"../node_modules/@mdx-js/react/dist/esm.js\");\n/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @emotion/css */ \"../node_modules/@emotion/css/dist/emotion-css.esm.js\");\n/* harmony import */ var _leafygreen_ui_typography__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @leafygreen-ui/typography */ \"../packages/typography/dist/esm/index.js\");\n/* harmony import */ var components_GuidelineImage__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! components/GuidelineImage */ \"./components/GuidelineImage.tsx\");\n/* harmony import */ var components_GuidelineImageFrame__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! components/GuidelineImageFrame */ \"./components/GuidelineImageFrame.tsx\");\n/* harmony import */ var utils_routes__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! utils/routes */ \"./utils/routes.ts\");\n/* harmony import */ var components_icons_IconDo__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! components/icons/IconDo */ \"./components/icons/IconDo.tsx\");\n/* harmony import */ var components_icons_IconDont__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! components/icons/IconDont */ \"./components/icons/IconDont.tsx\");\n/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @emotion/react */ \"../node_modules/@emotion/react/dist/emotion-react.browser.esm.js\");\n\n\nvar _jsxFileName = \"/Users/adam.thompson/Documents/GitHub/leafygreen-ui/website/pages/component/segmented-control/guidelines.mdx\";\n\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\n\n\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\n\n\n\n\n\nvar imagePath = \"\".concat(utils_routes__WEBPACK_IMPORTED_MODULE_8__[\"CDN\"], \"/images/new-guidelines/segmentedController\");\n\n\n\nvar gifStyle = /*#__PURE__*/Object(_emotion_css__WEBPACK_IMPORTED_MODULE_4__[\"css\"])(false ? undefined : {\n  name: \"1o43o2a-gifStyle\",\n  styles: \"width:320px;height:274px;object-fit:cover;label:gifStyle;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hZGFtLnRob21wc29uL0RvY3VtZW50cy9HaXRIdWIvbGVhZnlncmVlbi11aS93ZWJzaXRlL3BhZ2VzL2NvbXBvbmVudC9zZWdtZW50ZWQtY29udHJvbC9ndWlkZWxpbmVzLm1keCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFjb0IiLCJmaWxlIjoiL1VzZXJzL2FkYW0udGhvbXBzb24vRG9jdW1lbnRzL0dpdEh1Yi9sZWFmeWdyZWVuLXVpL3dlYnNpdGUvcGFnZXMvY29tcG9uZW50L3NlZ21lbnRlZC1jb250cm9sL2d1aWRlbGluZXMubWR4Iiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBtZHggfSBmcm9tICdAbWR4LWpzL3JlYWN0J1xuXG4vKiBAanN4UnVudGltZSBjbGFzc2ljICovXG4vKiBAanN4IG1keCAqL1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vY3NzJztcbmltcG9ydCB7IEJvZHksIEgyLCBIMywgTGluayB9IGZyb20gJ0BsZWFmeWdyZWVuLXVpL3R5cG9ncmFwaHknO1xuaW1wb3J0IEd1aWRlbGluZUltYWdlIGZyb20gJ2NvbXBvbmVudHMvR3VpZGVsaW5lSW1hZ2UnO1xuaW1wb3J0IEd1aWRlbGluZUltYWdlRnJhbWUgZnJvbSAnY29tcG9uZW50cy9HdWlkZWxpbmVJbWFnZUZyYW1lJztcbmltcG9ydCB7IENETiB9IGZyb20gJ3V0aWxzL3JvdXRlcyc7XG5jb25zdCBpbWFnZVBhdGggPSBgJHtDRE59L2ltYWdlcy9uZXctZ3VpZGVsaW5lcy9zZWdtZW50ZWRDb250cm9sbGVyYDtcbmltcG9ydCBJY29uRG8gZnJvbSAnY29tcG9uZW50cy9pY29ucy9JY29uRG8nO1xuaW1wb3J0IEljb25Eb250IGZyb20gJ2NvbXBvbmVudHMvaWNvbnMvSWNvbkRvbnQnO1xuY29uc3QgZ2lmU3R5bGUgPSBjc3NgXG4gIHdpZHRoOiAzMjBweDtcbiAgaGVpZ2h0OiAyNzRweDtcbiAgb2JqZWN0LWZpdDogY292ZXI7XG5gO1xuY29uc3QgdXNhZ2VJbWFnZVN0eWxlID0gY3NzYFxuICB3aWR0aDogYXV0bztcbiAgaGVpZ2h0OiA0MDVweDtcbmA7XG5jb25zdCBkZXRhaWxJbWFnZVN0eWxlID0gY3NzYFxuICB3aWR0aDogYXV0bztcbiAgaGVpZ2h0OiAxMTBweDtcbmA7XG5jb25zdCBoNCA9IGNzc2BcbiAgbWFyZ2luOiAwcHg7XG5gO1xuY29uc3QgZG9Eb250U2VjdGlvbiA9IGNzc2BcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiA2NHB4IGF1dG87XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktaXRlbXM6IGNlbnRlcjtcbiAgbWFyZ2luOiAzMnB4IDBweDtcbiAgZ2FwOiAyNHB4IDE2cHg7XG5gO1xuY29uc3QgbGlzdFdyYXBwZXIgPSBjc3NgXG4gIGxpbmUtaGVpZ2h0OiAxLjVlbTtcbiAganVzdGlmeS1zZWxmOiBsZWZ0O1xuYDtcbmNvbnN0IHVsID0gY3NzYFxuICBtYXJnaW46IHVuc2V0O1xuYDtcblxuXG5jb25zdCBsYXlvdXRQcm9wcyA9IHtcbiAgXG59O1xuY29uc3QgTURYTGF5b3V0ID0gXCJ3cmFwcGVyXCJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoe1xuICBjb21wb25lbnRzLFxuICAuLi5wcm9wc1xufSkge1xuICByZXR1cm4gPE1EWExheW91dCB7Li4ubGF5b3V0UHJvcHN9IHsuLi5wcm9wc30gY29tcG9uZW50cz17Y29tcG9uZW50c30gbWR4VHlwZT1cIk1EWExheW91dFwiPlxuXG4gICAgPHA+e2BTZWdtZW50ZWQgY29udHJvbHMgYWN0IGFzIGEgdG9nZ2xlIGJldHdlZW4gYSBjdXJyZW50IHN0YXRlIGFuZCByZWxhdGVkIHN0YXRlcywgb2Z0ZW4gY2hhbmdpbmcgdGhlIHZpZXcgb2YgaW5mb3JtYXRpb24gd2l0aGluIGEgc2luZ2xlIHBhZ2UuYH08L3A+XG4gICAgPGRpdiBjbGFzc05hbWU9e2RvRG9udFNlY3Rpb259PlxuICA8SWNvbkRvIG1keFR5cGU9XCJJY29uRG9cIiAvPlxuICA8ZGl2IGNsYXNzTmFtZT17bGlzdFdyYXBwZXJ9PlxuICAgIFxuICAgIDxoNCBjbGFzc05hbWU9e2g0fT5TZWdtZW50ZWQgY29udHJvbHMgZG88L2g0PlxuICAgIDx1bCBjbGFzc05hbWU9e3VsfT5cbiAgICAgIDxsaT5SZWR1Y2UgY29nbml0aXZlIGxvYWQgYnkgc2hvd2luZyBhbGwgYXZhaWxhYmxlIG9wdGlvbnM8L2xpPlxuICAgICAgPGxpPkNoYW5nZSBzdGF0ZXMgd2l0aGluIGEgcGFnZTwvbGk+XG4gICAgICA8bGk+VG9nZ2xlIGJldHdlZW4gdHdvIHRvIGZpdmUgb3B0aW9ucyA8L2xpPlxuICAgIDwvdWw+XG4gIDwvZGl2PlxuICA8SWNvbkRvbnQgbWR4VHlwZT1cIkljb25Eb250XCIgLz5cbiAgPGRpdiBjbGFzc05hbWU9e2xpc3RXcmFwcGVyfT5cbiAgICA8aDQgY2xhc3NOYW1lPXtoNH0+U2VnbWVudGVkIGNvbnRyb2xzIGRvbid0PC9oND5cbiAgICA8dWwgY2xhc3NOYW1lPXt1bH0+XG4gICAgICA8bGk+TmF2aWdhdGUgYmV0d2VlbiBkaXN0aW5jdCBwYWdlczwvbGk+XG4gICAgICA8bGk+UmVwbGFjZSBidXR0b25zLCB0YWJzIG9yIHJhZGlvIGJveGVzPC9saT5cbiAgICAgIDxsaT5Db250YWluIGdyZWF0ZXIgdGhhbiBmaXZlIHNlZ21lbnRzIDwvbGk+XG4gICAgPC91bD5cbiAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICAgPGgxPntgV2hlbiB0byB1c2Ugc2VnbWVudGVkIGNvbnRyb2xzYH08L2gxPlxuICAgIDxoMj57YFVzZSBzZWdtZW50ZWQgY29udHJvbHMgdG8gdG9nZ2xlIHZpZXdzIHdpdGhpbiBhIHBhZ2VgfTwvaDI+XG4gICAgPHA+e2BGb3IgZXhhbXBsZSwgdG8gc3dpdGNoIGJldHdlZW4gY29kZSBhbmQgdGFibGUgdmlld3Mgb3IgZmlsdGVyIGRhdGEuYH08L3A+XG4gICAgPEd1aWRlbGluZUltYWdlIGltYWdlVXJsPXtgJHtpbWFnZVBhdGh9L1NDLWd1aWRlbGluZXMtR0lGLTEuZ2lmYH0gY2xhc3NOYW1lPXt1c2FnZUltYWdlU3R5bGV9IG1keFR5cGU9XCJHdWlkZWxpbmVJbWFnZVwiIC8+XG4gICAgPGgyPntgVXNlIHNlZ21lbnRlZCBjb250cm9scyBhcyBmaWx0ZXIgc2VsZWN0c2B9PC9oMj5cbiAgICA8cD57YFNlZ21lbnRlZCBjb250cm9scyBjYW4gc29tZXRpbWVzIGFjdCBhcyB0b2dnbGVzIHRvIGVuY291cmFnZSBjb21wYXJpc29uIGJldHdlZW4gdHlwZXMgb2Ygb3B0aW9ucywgZm9yIGV4YW1wbGUgYW5udWFsIGFuZCBtb250aGx5LiBIb3dldmVyLCB0aGV5IGFyZSBub3QgYSByZXBsYWNlbWVudCBmb3IgcmFkaW8gYm94ZXMgaW4gb3RoZXIgdXNlIGNhc2VzLmB9PC9wPlxuICAgIDxHdWlkZWxpbmVJbWFnZSBpbWFnZVVybD17YCR7aW1hZ2VQYXRofS9TQy1ndWlkZWxpbmVzLUdJRi0yLmdpZmB9IGNsYXNzTmFtZT17dXNhZ2VJbWFnZVN0eWxlfSBtZHhUeXBlPVwiR3VpZGVsaW5lSW1hZ2VcIiAvPlxuICAgIDxoMj57YFVzZSBzZWdtZW50ZWQgY29udHJvbHMgYXMgZmlsdGVyIHNlbGVjdHNgfTwvaDI+XG4gICAgPHA+e2BTZWdtZW50ZWQgY29udHJvbHMgYXJlIG9mdGVuIHVzZWQgdG8gdG9nZ2xlIHRocm91Z2ggdmlldyB0eXBlcyB3aXRoaW4gYSBzaW5nbGUgcGFnZS4gQ29uc2lkZXIgdXNpbmcgYH08TGluayBocmVmPVwiY29tcG9uZW50L3RhYnMvZ3VpZGVsaW5lc1wiIG1keFR5cGU9XCJMaW5rXCI+e2B0YWJzYH08L0xpbms+e2AgdG8gZmxpcCBiZXR3ZWVuIGRpc3RpbmN0IHBhZ2VzLmB9PC9wPlxuICAgIDxHdWlkZWxpbmVJbWFnZSBpbWFnZVVybD17YCR7aW1hZ2VQYXRofS9TQy1ndWlkZWxpbmVzLUdJRi0zLmdpZmB9IGNsYXNzTmFtZT17dXNhZ2VJbWFnZVN0eWxlfSBtZHhUeXBlPVwiR3VpZGVsaW5lSW1hZ2VcIiAvPlxuICAgIDxoMj57YEhvdyB0byB1c2Ugc2VnbWVudGVkIGNvbnRyb2xzYH08L2gyPlxuICAgIDxwPntgU2VnbWVudGVkIGNvbnRyb2xzIHNob3VsZCBjb250YWluIGJldHdlZW4gdHdvIGFuZCBmaXZlIGVxdWFsLXdpZHRoIHNlZ21lbnRzLiBUaGUgd2lkdGggb2YgZWFjaCBzZWdtZW50IHNob3VsZCBiZSBlcXVhbCB0byB0aGUgd2lkdGggb2YgdGhlIGxhcmdlc3Qgc2VnbWVudC5gfTwvcD5cbiAgICA8R3VpZGVsaW5lSW1hZ2UgaW1hZ2VVUkw9e2Ake2ltYWdlUGF0aH0vU0MtZ3VpZGVsaW5lcy00QDN4LnBuZ2B9IGNsYXNzTmFtZT17ZGV0YWlsSW1hZ2VTdHlsZX0gbWR4VHlwZT1cIkd1aWRlbGluZUltYWdlXCIgLz5cbiAgICA8cD57YEV4YWN0bHkgb25lIHNlZ21lbnQgaXMgYWx3YXlzIHNlbGVjdGVkLiBJZiBhIHN0YXRlIGlzIGhpZ2hlciBwcmlvcml0eSwgY29uc2lkZXIgbWFraW5nIGl0IHRoZSBkZWZhdWx0IHNlbGVjdGlvbi5gfTwvcD5cbiAgICA8R3VpZGVsaW5lSW1hZ2UgaW1hZ2VVUkw9e2Ake2ltYWdlUGF0aH0vU0MtZ3VpZGVsaW5lcy01QDN4LnBuZ2B9IGNsYXNzTmFtZT17ZGV0YWlsSW1hZ2VTdHlsZX0gbWR4VHlwZT1cIkd1aWRlbGluZUltYWdlXCIgLz5cbiAgICA8cD57YFVzZSBhbiBleHRlcm5hbCBsYWJlbCB0byBhdm9pZCBpbmNsdWRpbmcgdW5lY2Vzc2FyeSB3b3JkcyBpbnRvIHRoZSBzZWdtZW50cy5gfTwvcD5cbiAgICA8R3VpZGVsaW5lSW1hZ2UgaW1hZ2VVUkw9e2Ake2ltYWdlUGF0aH0vU0MtZ3VpZGVsaW5lcy02QDN4LnBuZ2B9IGNsYXNzTmFtZT17ZGV0YWlsSW1hZ2VTdHlsZX0gbWR4VHlwZT1cIkd1aWRlbGluZUltYWdlXCIgLz5cbiAgICA8cD57YFNlZ21lbnRlZCBjb250cm9scyBzaG91bGRu4oCZdCBiZSB1c2VkIGluIHBsYWNlIG9mIGJ1dHRvbnMgb3IgcmFkaW8gYm94ZXMuYH08L3A+XG4gICAgPEd1aWRlbGluZUltYWdlIGltYWdlVVJMPXtgJHtpbWFnZVBhdGh9L1NDLWd1aWRlbGluZXMtN0AzeC5wbmdgfSBjbGFzc05hbWU9e2RldGFpbEltYWdlU3R5bGV9IG1keFR5cGU9XCJHdWlkZWxpbmVJbWFnZVwiIC8+XG4gICAgPHA+e2BJZiB1c2luZyBib3RoIGljb25zIGFuZCB0ZXh0LCBiZSBjb25zaXN0ZW50IGFjcm9zcyBlYWNoIHNlZ21lbnQuYH08L3A+XG4gICAgPEd1aWRlbGluZUltYWdlIGltYWdlVVJMPXtgJHtpbWFnZVBhdGh9L1NDLWd1aWRlbGluZXMtOEAzeC5wbmdgfSBjbGFzc05hbWU9e2RldGFpbEltYWdlU3R5bGV9IG1keFR5cGU9XCJHdWlkZWxpbmVJbWFnZVwiIC8+XG4gICAgPHA+e2BMaW1pdCBjb3B5IHdpdGhpbiB0aGUgc2VnbWVudCB0byBvbmUgdG8gdHdvIHdvcmRzIGFuZCBwcmlvcml0aXplIG5vdW5zLmB9PC9wPlxuICAgIDxHdWlkZWxpbmVJbWFnZSBpbWFnZVVSTD17YCR7aW1hZ2VQYXRofS9TQy1ndWlkZWxpbmVzLTlAM3gucG5nYH0gY2xhc3NOYW1lPXtkZXRhaWxJbWFnZVN0eWxlfSBtZHhUeXBlPVwiR3VpZGVsaW5lSW1hZ2VcIiAvPlxuICAgIDxwPntgQ29uc2lkZXIgZGlzY292ZXJhYmlsaXR5IHdoZW4gY2hvb3NpbmcgYWxpZ25tZW50LiBMZWZ0LWFsaWduZWQgY29tcG9uZW50cyBnZW5lcmFsbHkgbW9yZSBkaXNjb3ZlcmFibGUgdGhhbiByaWdodC1hbGlnbmVkIGNvbXBvbmVudHMsIGFsdGhvdWdoIHRoZXJlIG1heSBiZSB1c2UgY2FzZXMgZm9yIGVhY2guYH08L3A+XG4gICAgPEd1aWRlbGluZUltYWdlIGltYWdlVVJMPXtgJHtpbWFnZVBhdGh9L1NDLWd1aWRlbGluZXMtMTBAM3gucG5nYH0gY2xhc3NOYW1lPXt1c2FnZUltYWdlU3R5bGV9IG1keFR5cGU9XCJHdWlkZWxpbmVJbWFnZVwiIC8+XG4gICAgPC9NRFhMYXlvdXQ+O1xufVxuXG47XG5NRFhDb250ZW50LmlzTURYQ29tcG9uZW50ID0gdHJ1ZTsiXX0= */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nvar usageImageStyle = /*#__PURE__*/Object(_emotion_css__WEBPACK_IMPORTED_MODULE_4__[\"css\"])(false ? undefined : {\n  name: \"1rc08t0-usageImageStyle\",\n  styles: \"width:auto;height:405px;label:usageImageStyle;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hZGFtLnRob21wc29uL0RvY3VtZW50cy9HaXRIdWIvbGVhZnlncmVlbi11aS93ZWJzaXRlL3BhZ2VzL2NvbXBvbmVudC9zZWdtZW50ZWQtY29udHJvbC9ndWlkZWxpbmVzLm1keCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFtQjJCIiwiZmlsZSI6Ii9Vc2Vycy9hZGFtLnRob21wc29uL0RvY3VtZW50cy9HaXRIdWIvbGVhZnlncmVlbi11aS93ZWJzaXRlL3BhZ2VzL2NvbXBvbmVudC9zZWdtZW50ZWQtY29udHJvbC9ndWlkZWxpbmVzLm1keCIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgbWR4IH0gZnJvbSAnQG1keC1qcy9yZWFjdCdcblxuLyogQGpzeFJ1bnRpbWUgY2xhc3NpYyAqL1xuLyogQGpzeCBtZHggKi9cbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2Nzcyc7XG5pbXBvcnQgeyBCb2R5LCBIMiwgSDMsIExpbmsgfSBmcm9tICdAbGVhZnlncmVlbi11aS90eXBvZ3JhcGh5JztcbmltcG9ydCBHdWlkZWxpbmVJbWFnZSBmcm9tICdjb21wb25lbnRzL0d1aWRlbGluZUltYWdlJztcbmltcG9ydCBHdWlkZWxpbmVJbWFnZUZyYW1lIGZyb20gJ2NvbXBvbmVudHMvR3VpZGVsaW5lSW1hZ2VGcmFtZSc7XG5pbXBvcnQgeyBDRE4gfSBmcm9tICd1dGlscy9yb3V0ZXMnO1xuY29uc3QgaW1hZ2VQYXRoID0gYCR7Q0ROfS9pbWFnZXMvbmV3LWd1aWRlbGluZXMvc2VnbWVudGVkQ29udHJvbGxlcmA7XG5pbXBvcnQgSWNvbkRvIGZyb20gJ2NvbXBvbmVudHMvaWNvbnMvSWNvbkRvJztcbmltcG9ydCBJY29uRG9udCBmcm9tICdjb21wb25lbnRzL2ljb25zL0ljb25Eb250JztcbmNvbnN0IGdpZlN0eWxlID0gY3NzYFxuICB3aWR0aDogMzIwcHg7XG4gIGhlaWdodDogMjc0cHg7XG4gIG9iamVjdC1maXQ6IGNvdmVyO1xuYDtcbmNvbnN0IHVzYWdlSW1hZ2VTdHlsZSA9IGNzc2BcbiAgd2lkdGg6IGF1dG87XG4gIGhlaWdodDogNDA1cHg7XG5gO1xuY29uc3QgZGV0YWlsSW1hZ2VTdHlsZSA9IGNzc2BcbiAgd2lkdGg6IGF1dG87XG4gIGhlaWdodDogMTEwcHg7XG5gO1xuY29uc3QgaDQgPSBjc3NgXG4gIG1hcmdpbjogMHB4O1xuYDtcbmNvbnN0IGRvRG9udFNlY3Rpb24gPSBjc3NgXG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogNjRweCBhdXRvO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWl0ZW1zOiBjZW50ZXI7XG4gIG1hcmdpbjogMzJweCAwcHg7XG4gIGdhcDogMjRweCAxNnB4O1xuYDtcbmNvbnN0IGxpc3RXcmFwcGVyID0gY3NzYFxuICBsaW5lLWhlaWdodDogMS41ZW07XG4gIGp1c3RpZnktc2VsZjogbGVmdDtcbmA7XG5jb25zdCB1bCA9IGNzc2BcbiAgbWFyZ2luOiB1bnNldDtcbmA7XG5cblxuY29uc3QgbGF5b3V0UHJvcHMgPSB7XG4gIFxufTtcbmNvbnN0IE1EWExheW91dCA9IFwid3JhcHBlclwiXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHtcbiAgY29tcG9uZW50cyxcbiAgLi4ucHJvcHNcbn0pIHtcbiAgcmV0dXJuIDxNRFhMYXlvdXQgey4uLmxheW91dFByb3BzfSB7Li4ucHJvcHN9IGNvbXBvbmVudHM9e2NvbXBvbmVudHN9IG1keFR5cGU9XCJNRFhMYXlvdXRcIj5cblxuICAgIDxwPntgU2VnbWVudGVkIGNvbnRyb2xzIGFjdCBhcyBhIHRvZ2dsZSBiZXR3ZWVuIGEgY3VycmVudCBzdGF0ZSBhbmQgcmVsYXRlZCBzdGF0ZXMsIG9mdGVuIGNoYW5naW5nIHRoZSB2aWV3IG9mIGluZm9ybWF0aW9uIHdpdGhpbiBhIHNpbmdsZSBwYWdlLmB9PC9wPlxuICAgIDxkaXYgY2xhc3NOYW1lPXtkb0RvbnRTZWN0aW9ufT5cbiAgPEljb25EbyBtZHhUeXBlPVwiSWNvbkRvXCIgLz5cbiAgPGRpdiBjbGFzc05hbWU9e2xpc3RXcmFwcGVyfT5cbiAgICBcbiAgICA8aDQgY2xhc3NOYW1lPXtoNH0+U2VnbWVudGVkIGNvbnRyb2xzIGRvPC9oND5cbiAgICA8dWwgY2xhc3NOYW1lPXt1bH0+XG4gICAgICA8bGk+UmVkdWNlIGNvZ25pdGl2ZSBsb2FkIGJ5IHNob3dpbmcgYWxsIGF2YWlsYWJsZSBvcHRpb25zPC9saT5cbiAgICAgIDxsaT5DaGFuZ2Ugc3RhdGVzIHdpdGhpbiBhIHBhZ2U8L2xpPlxuICAgICAgPGxpPlRvZ2dsZSBiZXR3ZWVuIHR3byB0byBmaXZlIG9wdGlvbnMgPC9saT5cbiAgICA8L3VsPlxuICA8L2Rpdj5cbiAgPEljb25Eb250IG1keFR5cGU9XCJJY29uRG9udFwiIC8+XG4gIDxkaXYgY2xhc3NOYW1lPXtsaXN0V3JhcHBlcn0+XG4gICAgPGg0IGNsYXNzTmFtZT17aDR9PlNlZ21lbnRlZCBjb250cm9scyBkb24ndDwvaDQ+XG4gICAgPHVsIGNsYXNzTmFtZT17dWx9PlxuICAgICAgPGxpPk5hdmlnYXRlIGJldHdlZW4gZGlzdGluY3QgcGFnZXM8L2xpPlxuICAgICAgPGxpPlJlcGxhY2UgYnV0dG9ucywgdGFicyBvciByYWRpbyBib3hlczwvbGk+XG4gICAgICA8bGk+Q29udGFpbiBncmVhdGVyIHRoYW4gZml2ZSBzZWdtZW50cyA8L2xpPlxuICAgIDwvdWw+XG4gIDwvZGl2PlxuICAgIDwvZGl2PlxuICAgIDxoMT57YFdoZW4gdG8gdXNlIHNlZ21lbnRlZCBjb250cm9sc2B9PC9oMT5cbiAgICA8aDI+e2BVc2Ugc2VnbWVudGVkIGNvbnRyb2xzIHRvIHRvZ2dsZSB2aWV3cyB3aXRoaW4gYSBwYWdlYH08L2gyPlxuICAgIDxwPntgRm9yIGV4YW1wbGUsIHRvIHN3aXRjaCBiZXR3ZWVuIGNvZGUgYW5kIHRhYmxlIHZpZXdzIG9yIGZpbHRlciBkYXRhLmB9PC9wPlxuICAgIDxHdWlkZWxpbmVJbWFnZSBpbWFnZVVybD17YCR7aW1hZ2VQYXRofS9TQy1ndWlkZWxpbmVzLUdJRi0xLmdpZmB9IGNsYXNzTmFtZT17dXNhZ2VJbWFnZVN0eWxlfSBtZHhUeXBlPVwiR3VpZGVsaW5lSW1hZ2VcIiAvPlxuICAgIDxoMj57YFVzZSBzZWdtZW50ZWQgY29udHJvbHMgYXMgZmlsdGVyIHNlbGVjdHNgfTwvaDI+XG4gICAgPHA+e2BTZWdtZW50ZWQgY29udHJvbHMgY2FuIHNvbWV0aW1lcyBhY3QgYXMgdG9nZ2xlcyB0byBlbmNvdXJhZ2UgY29tcGFyaXNvbiBiZXR3ZWVuIHR5cGVzIG9mIG9wdGlvbnMsIGZvciBleGFtcGxlIGFubnVhbCBhbmQgbW9udGhseS4gSG93ZXZlciwgdGhleSBhcmUgbm90IGEgcmVwbGFjZW1lbnQgZm9yIHJhZGlvIGJveGVzIGluIG90aGVyIHVzZSBjYXNlcy5gfTwvcD5cbiAgICA8R3VpZGVsaW5lSW1hZ2UgaW1hZ2VVcmw9e2Ake2ltYWdlUGF0aH0vU0MtZ3VpZGVsaW5lcy1HSUYtMi5naWZgfSBjbGFzc05hbWU9e3VzYWdlSW1hZ2VTdHlsZX0gbWR4VHlwZT1cIkd1aWRlbGluZUltYWdlXCIgLz5cbiAgICA8aDI+e2BVc2Ugc2VnbWVudGVkIGNvbnRyb2xzIGFzIGZpbHRlciBzZWxlY3RzYH08L2gyPlxuICAgIDxwPntgU2VnbWVudGVkIGNvbnRyb2xzIGFyZSBvZnRlbiB1c2VkIHRvIHRvZ2dsZSB0aHJvdWdoIHZpZXcgdHlwZXMgd2l0aGluIGEgc2luZ2xlIHBhZ2UuIENvbnNpZGVyIHVzaW5nIGB9PExpbmsgaHJlZj1cImNvbXBvbmVudC90YWJzL2d1aWRlbGluZXNcIiBtZHhUeXBlPVwiTGlua1wiPntgdGFic2B9PC9MaW5rPntgIHRvIGZsaXAgYmV0d2VlbiBkaXN0aW5jdCBwYWdlcy5gfTwvcD5cbiAgICA8R3VpZGVsaW5lSW1hZ2UgaW1hZ2VVcmw9e2Ake2ltYWdlUGF0aH0vU0MtZ3VpZGVsaW5lcy1HSUYtMy5naWZgfSBjbGFzc05hbWU9e3VzYWdlSW1hZ2VTdHlsZX0gbWR4VHlwZT1cIkd1aWRlbGluZUltYWdlXCIgLz5cbiAgICA8aDI+e2BIb3cgdG8gdXNlIHNlZ21lbnRlZCBjb250cm9sc2B9PC9oMj5cbiAgICA8cD57YFNlZ21lbnRlZCBjb250cm9scyBzaG91bGQgY29udGFpbiBiZXR3ZWVuIHR3byBhbmQgZml2ZSBlcXVhbC13aWR0aCBzZWdtZW50cy4gVGhlIHdpZHRoIG9mIGVhY2ggc2VnbWVudCBzaG91bGQgYmUgZXF1YWwgdG8gdGhlIHdpZHRoIG9mIHRoZSBsYXJnZXN0IHNlZ21lbnQuYH08L3A+XG4gICAgPEd1aWRlbGluZUltYWdlIGltYWdlVVJMPXtgJHtpbWFnZVBhdGh9L1NDLWd1aWRlbGluZXMtNEAzeC5wbmdgfSBjbGFzc05hbWU9e2RldGFpbEltYWdlU3R5bGV9IG1keFR5cGU9XCJHdWlkZWxpbmVJbWFnZVwiIC8+XG4gICAgPHA+e2BFeGFjdGx5IG9uZSBzZWdtZW50IGlzIGFsd2F5cyBzZWxlY3RlZC4gSWYgYSBzdGF0ZSBpcyBoaWdoZXIgcHJpb3JpdHksIGNvbnNpZGVyIG1ha2luZyBpdCB0aGUgZGVmYXVsdCBzZWxlY3Rpb24uYH08L3A+XG4gICAgPEd1aWRlbGluZUltYWdlIGltYWdlVVJMPXtgJHtpbWFnZVBhdGh9L1NDLWd1aWRlbGluZXMtNUAzeC5wbmdgfSBjbGFzc05hbWU9e2RldGFpbEltYWdlU3R5bGV9IG1keFR5cGU9XCJHdWlkZWxpbmVJbWFnZVwiIC8+XG4gICAgPHA+e2BVc2UgYW4gZXh0ZXJuYWwgbGFiZWwgdG8gYXZvaWQgaW5jbHVkaW5nIHVuZWNlc3Nhcnkgd29yZHMgaW50byB0aGUgc2VnbWVudHMuYH08L3A+XG4gICAgPEd1aWRlbGluZUltYWdlIGltYWdlVVJMPXtgJHtpbWFnZVBhdGh9L1NDLWd1aWRlbGluZXMtNkAzeC5wbmdgfSBjbGFzc05hbWU9e2RldGFpbEltYWdlU3R5bGV9IG1keFR5cGU9XCJHdWlkZWxpbmVJbWFnZVwiIC8+XG4gICAgPHA+e2BTZWdtZW50ZWQgY29udHJvbHMgc2hvdWxkbuKAmXQgYmUgdXNlZCBpbiBwbGFjZSBvZiBidXR0b25zIG9yIHJhZGlvIGJveGVzLmB9PC9wPlxuICAgIDxHdWlkZWxpbmVJbWFnZSBpbWFnZVVSTD17YCR7aW1hZ2VQYXRofS9TQy1ndWlkZWxpbmVzLTdAM3gucG5nYH0gY2xhc3NOYW1lPXtkZXRhaWxJbWFnZVN0eWxlfSBtZHhUeXBlPVwiR3VpZGVsaW5lSW1hZ2VcIiAvPlxuICAgIDxwPntgSWYgdXNpbmcgYm90aCBpY29ucyBhbmQgdGV4dCwgYmUgY29uc2lzdGVudCBhY3Jvc3MgZWFjaCBzZWdtZW50LmB9PC9wPlxuICAgIDxHdWlkZWxpbmVJbWFnZSBpbWFnZVVSTD17YCR7aW1hZ2VQYXRofS9TQy1ndWlkZWxpbmVzLThAM3gucG5nYH0gY2xhc3NOYW1lPXtkZXRhaWxJbWFnZVN0eWxlfSBtZHhUeXBlPVwiR3VpZGVsaW5lSW1hZ2VcIiAvPlxuICAgIDxwPntgTGltaXQgY29weSB3aXRoaW4gdGhlIHNlZ21lbnQgdG8gb25lIHRvIHR3byB3b3JkcyBhbmQgcHJpb3JpdGl6ZSBub3Vucy5gfTwvcD5cbiAgICA8R3VpZGVsaW5lSW1hZ2UgaW1hZ2VVUkw9e2Ake2ltYWdlUGF0aH0vU0MtZ3VpZGVsaW5lcy05QDN4LnBuZ2B9IGNsYXNzTmFtZT17ZGV0YWlsSW1hZ2VTdHlsZX0gbWR4VHlwZT1cIkd1aWRlbGluZUltYWdlXCIgLz5cbiAgICA8cD57YENvbnNpZGVyIGRpc2NvdmVyYWJpbGl0eSB3aGVuIGNob29zaW5nIGFsaWdubWVudC4gTGVmdC1hbGlnbmVkIGNvbXBvbmVudHMgZ2VuZXJhbGx5IG1vcmUgZGlzY292ZXJhYmxlIHRoYW4gcmlnaHQtYWxpZ25lZCBjb21wb25lbnRzLCBhbHRob3VnaCB0aGVyZSBtYXkgYmUgdXNlIGNhc2VzIGZvciBlYWNoLmB9PC9wPlxuICAgIDxHdWlkZWxpbmVJbWFnZSBpbWFnZVVSTD17YCR7aW1hZ2VQYXRofS9TQy1ndWlkZWxpbmVzLTEwQDN4LnBuZ2B9IGNsYXNzTmFtZT17dXNhZ2VJbWFnZVN0eWxlfSBtZHhUeXBlPVwiR3VpZGVsaW5lSW1hZ2VcIiAvPlxuICAgIDwvTURYTGF5b3V0Pjtcbn1cblxuO1xuTURYQ29udGVudC5pc01EWENvbXBvbmVudCA9IHRydWU7Il19 */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nvar detailImageStyle = /*#__PURE__*/Object(_emotion_css__WEBPACK_IMPORTED_MODULE_4__[\"css\"])(false ? undefined : {\n  name: \"c8zr0z-detailImageStyle\",\n  styles: \"width:auto;height:110px;label:detailImageStyle;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hZGFtLnRob21wc29uL0RvY3VtZW50cy9HaXRIdWIvbGVhZnlncmVlbi11aS93ZWJzaXRlL3BhZ2VzL2NvbXBvbmVudC9zZWdtZW50ZWQtY29udHJvbC9ndWlkZWxpbmVzLm1keCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF1QjRCIiwiZmlsZSI6Ii9Vc2Vycy9hZGFtLnRob21wc29uL0RvY3VtZW50cy9HaXRIdWIvbGVhZnlncmVlbi11aS93ZWJzaXRlL3BhZ2VzL2NvbXBvbmVudC9zZWdtZW50ZWQtY29udHJvbC9ndWlkZWxpbmVzLm1keCIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgbWR4IH0gZnJvbSAnQG1keC1qcy9yZWFjdCdcblxuLyogQGpzeFJ1bnRpbWUgY2xhc3NpYyAqL1xuLyogQGpzeCBtZHggKi9cbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2Nzcyc7XG5pbXBvcnQgeyBCb2R5LCBIMiwgSDMsIExpbmsgfSBmcm9tICdAbGVhZnlncmVlbi11aS90eXBvZ3JhcGh5JztcbmltcG9ydCBHdWlkZWxpbmVJbWFnZSBmcm9tICdjb21wb25lbnRzL0d1aWRlbGluZUltYWdlJztcbmltcG9ydCBHdWlkZWxpbmVJbWFnZUZyYW1lIGZyb20gJ2NvbXBvbmVudHMvR3VpZGVsaW5lSW1hZ2VGcmFtZSc7XG5pbXBvcnQgeyBDRE4gfSBmcm9tICd1dGlscy9yb3V0ZXMnO1xuY29uc3QgaW1hZ2VQYXRoID0gYCR7Q0ROfS9pbWFnZXMvbmV3LWd1aWRlbGluZXMvc2VnbWVudGVkQ29udHJvbGxlcmA7XG5pbXBvcnQgSWNvbkRvIGZyb20gJ2NvbXBvbmVudHMvaWNvbnMvSWNvbkRvJztcbmltcG9ydCBJY29uRG9udCBmcm9tICdjb21wb25lbnRzL2ljb25zL0ljb25Eb250JztcbmNvbnN0IGdpZlN0eWxlID0gY3NzYFxuICB3aWR0aDogMzIwcHg7XG4gIGhlaWdodDogMjc0cHg7XG4gIG9iamVjdC1maXQ6IGNvdmVyO1xuYDtcbmNvbnN0IHVzYWdlSW1hZ2VTdHlsZSA9IGNzc2BcbiAgd2lkdGg6IGF1dG87XG4gIGhlaWdodDogNDA1cHg7XG5gO1xuY29uc3QgZGV0YWlsSW1hZ2VTdHlsZSA9IGNzc2BcbiAgd2lkdGg6IGF1dG87XG4gIGhlaWdodDogMTEwcHg7XG5gO1xuY29uc3QgaDQgPSBjc3NgXG4gIG1hcmdpbjogMHB4O1xuYDtcbmNvbnN0IGRvRG9udFNlY3Rpb24gPSBjc3NgXG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogNjRweCBhdXRvO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWl0ZW1zOiBjZW50ZXI7XG4gIG1hcmdpbjogMzJweCAwcHg7XG4gIGdhcDogMjRweCAxNnB4O1xuYDtcbmNvbnN0IGxpc3RXcmFwcGVyID0gY3NzYFxuICBsaW5lLWhlaWdodDogMS41ZW07XG4gIGp1c3RpZnktc2VsZjogbGVmdDtcbmA7XG5jb25zdCB1bCA9IGNzc2BcbiAgbWFyZ2luOiB1bnNldDtcbmA7XG5cblxuY29uc3QgbGF5b3V0UHJvcHMgPSB7XG4gIFxufTtcbmNvbnN0IE1EWExheW91dCA9IFwid3JhcHBlclwiXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHtcbiAgY29tcG9uZW50cyxcbiAgLi4ucHJvcHNcbn0pIHtcbiAgcmV0dXJuIDxNRFhMYXlvdXQgey4uLmxheW91dFByb3BzfSB7Li4ucHJvcHN9IGNvbXBvbmVudHM9e2NvbXBvbmVudHN9IG1keFR5cGU9XCJNRFhMYXlvdXRcIj5cblxuICAgIDxwPntgU2VnbWVudGVkIGNvbnRyb2xzIGFjdCBhcyBhIHRvZ2dsZSBiZXR3ZWVuIGEgY3VycmVudCBzdGF0ZSBhbmQgcmVsYXRlZCBzdGF0ZXMsIG9mdGVuIGNoYW5naW5nIHRoZSB2aWV3IG9mIGluZm9ybWF0aW9uIHdpdGhpbiBhIHNpbmdsZSBwYWdlLmB9PC9wPlxuICAgIDxkaXYgY2xhc3NOYW1lPXtkb0RvbnRTZWN0aW9ufT5cbiAgPEljb25EbyBtZHhUeXBlPVwiSWNvbkRvXCIgLz5cbiAgPGRpdiBjbGFzc05hbWU9e2xpc3RXcmFwcGVyfT5cbiAgICBcbiAgICA8aDQgY2xhc3NOYW1lPXtoNH0+U2VnbWVudGVkIGNvbnRyb2xzIGRvPC9oND5cbiAgICA8dWwgY2xhc3NOYW1lPXt1bH0+XG4gICAgICA8bGk+UmVkdWNlIGNvZ25pdGl2ZSBsb2FkIGJ5IHNob3dpbmcgYWxsIGF2YWlsYWJsZSBvcHRpb25zPC9saT5cbiAgICAgIDxsaT5DaGFuZ2Ugc3RhdGVzIHdpdGhpbiBhIHBhZ2U8L2xpPlxuICAgICAgPGxpPlRvZ2dsZSBiZXR3ZWVuIHR3byB0byBmaXZlIG9wdGlvbnMgPC9saT5cbiAgICA8L3VsPlxuICA8L2Rpdj5cbiAgPEljb25Eb250IG1keFR5cGU9XCJJY29uRG9udFwiIC8+XG4gIDxkaXYgY2xhc3NOYW1lPXtsaXN0V3JhcHBlcn0+XG4gICAgPGg0IGNsYXNzTmFtZT17aDR9PlNlZ21lbnRlZCBjb250cm9scyBkb24ndDwvaDQ+XG4gICAgPHVsIGNsYXNzTmFtZT17dWx9PlxuICAgICAgPGxpPk5hdmlnYXRlIGJldHdlZW4gZGlzdGluY3QgcGFnZXM8L2xpPlxuICAgICAgPGxpPlJlcGxhY2UgYnV0dG9ucywgdGFicyBvciByYWRpbyBib3hlczwvbGk+XG4gICAgICA8bGk+Q29udGFpbiBncmVhdGVyIHRoYW4gZml2ZSBzZWdtZW50cyA8L2xpPlxuICAgIDwvdWw+XG4gIDwvZGl2PlxuICAgIDwvZGl2PlxuICAgIDxoMT57YFdoZW4gdG8gdXNlIHNlZ21lbnRlZCBjb250cm9sc2B9PC9oMT5cbiAgICA8aDI+e2BVc2Ugc2VnbWVudGVkIGNvbnRyb2xzIHRvIHRvZ2dsZSB2aWV3cyB3aXRoaW4gYSBwYWdlYH08L2gyPlxuICAgIDxwPntgRm9yIGV4YW1wbGUsIHRvIHN3aXRjaCBiZXR3ZWVuIGNvZGUgYW5kIHRhYmxlIHZpZXdzIG9yIGZpbHRlciBkYXRhLmB9PC9wPlxuICAgIDxHdWlkZWxpbmVJbWFnZSBpbWFnZVVybD17YCR7aW1hZ2VQYXRofS9TQy1ndWlkZWxpbmVzLUdJRi0xLmdpZmB9IGNsYXNzTmFtZT17dXNhZ2VJbWFnZVN0eWxlfSBtZHhUeXBlPVwiR3VpZGVsaW5lSW1hZ2VcIiAvPlxuICAgIDxoMj57YFVzZSBzZWdtZW50ZWQgY29udHJvbHMgYXMgZmlsdGVyIHNlbGVjdHNgfTwvaDI+XG4gICAgPHA+e2BTZWdtZW50ZWQgY29udHJvbHMgY2FuIHNvbWV0aW1lcyBhY3QgYXMgdG9nZ2xlcyB0byBlbmNvdXJhZ2UgY29tcGFyaXNvbiBiZXR3ZWVuIHR5cGVzIG9mIG9wdGlvbnMsIGZvciBleGFtcGxlIGFubnVhbCBhbmQgbW9udGhseS4gSG93ZXZlciwgdGhleSBhcmUgbm90IGEgcmVwbGFjZW1lbnQgZm9yIHJhZGlvIGJveGVzIGluIG90aGVyIHVzZSBjYXNlcy5gfTwvcD5cbiAgICA8R3VpZGVsaW5lSW1hZ2UgaW1hZ2VVcmw9e2Ake2ltYWdlUGF0aH0vU0MtZ3VpZGVsaW5lcy1HSUYtMi5naWZgfSBjbGFzc05hbWU9e3VzYWdlSW1hZ2VTdHlsZX0gbWR4VHlwZT1cIkd1aWRlbGluZUltYWdlXCIgLz5cbiAgICA8aDI+e2BVc2Ugc2VnbWVudGVkIGNvbnRyb2xzIGFzIGZpbHRlciBzZWxlY3RzYH08L2gyPlxuICAgIDxwPntgU2VnbWVudGVkIGNvbnRyb2xzIGFyZSBvZnRlbiB1c2VkIHRvIHRvZ2dsZSB0aHJvdWdoIHZpZXcgdHlwZXMgd2l0aGluIGEgc2luZ2xlIHBhZ2UuIENvbnNpZGVyIHVzaW5nIGB9PExpbmsgaHJlZj1cImNvbXBvbmVudC90YWJzL2d1aWRlbGluZXNcIiBtZHhUeXBlPVwiTGlua1wiPntgdGFic2B9PC9MaW5rPntgIHRvIGZsaXAgYmV0d2VlbiBkaXN0aW5jdCBwYWdlcy5gfTwvcD5cbiAgICA8R3VpZGVsaW5lSW1hZ2UgaW1hZ2VVcmw9e2Ake2ltYWdlUGF0aH0vU0MtZ3VpZGVsaW5lcy1HSUYtMy5naWZgfSBjbGFzc05hbWU9e3VzYWdlSW1hZ2VTdHlsZX0gbWR4VHlwZT1cIkd1aWRlbGluZUltYWdlXCIgLz5cbiAgICA8aDI+e2BIb3cgdG8gdXNlIHNlZ21lbnRlZCBjb250cm9sc2B9PC9oMj5cbiAgICA8cD57YFNlZ21lbnRlZCBjb250cm9scyBzaG91bGQgY29udGFpbiBiZXR3ZWVuIHR3byBhbmQgZml2ZSBlcXVhbC13aWR0aCBzZWdtZW50cy4gVGhlIHdpZHRoIG9mIGVhY2ggc2VnbWVudCBzaG91bGQgYmUgZXF1YWwgdG8gdGhlIHdpZHRoIG9mIHRoZSBsYXJnZXN0IHNlZ21lbnQuYH08L3A+XG4gICAgPEd1aWRlbGluZUltYWdlIGltYWdlVVJMPXtgJHtpbWFnZVBhdGh9L1NDLWd1aWRlbGluZXMtNEAzeC5wbmdgfSBjbGFzc05hbWU9e2RldGFpbEltYWdlU3R5bGV9IG1keFR5cGU9XCJHdWlkZWxpbmVJbWFnZVwiIC8+XG4gICAgPHA+e2BFeGFjdGx5IG9uZSBzZWdtZW50IGlzIGFsd2F5cyBzZWxlY3RlZC4gSWYgYSBzdGF0ZSBpcyBoaWdoZXIgcHJpb3JpdHksIGNvbnNpZGVyIG1ha2luZyBpdCB0aGUgZGVmYXVsdCBzZWxlY3Rpb24uYH08L3A+XG4gICAgPEd1aWRlbGluZUltYWdlIGltYWdlVVJMPXtgJHtpbWFnZVBhdGh9L1NDLWd1aWRlbGluZXMtNUAzeC5wbmdgfSBjbGFzc05hbWU9e2RldGFpbEltYWdlU3R5bGV9IG1keFR5cGU9XCJHdWlkZWxpbmVJbWFnZVwiIC8+XG4gICAgPHA+e2BVc2UgYW4gZXh0ZXJuYWwgbGFiZWwgdG8gYXZvaWQgaW5jbHVkaW5nIHVuZWNlc3Nhcnkgd29yZHMgaW50byB0aGUgc2VnbWVudHMuYH08L3A+XG4gICAgPEd1aWRlbGluZUltYWdlIGltYWdlVVJMPXtgJHtpbWFnZVBhdGh9L1NDLWd1aWRlbGluZXMtNkAzeC5wbmdgfSBjbGFzc05hbWU9e2RldGFpbEltYWdlU3R5bGV9IG1keFR5cGU9XCJHdWlkZWxpbmVJbWFnZVwiIC8+XG4gICAgPHA+e2BTZWdtZW50ZWQgY29udHJvbHMgc2hvdWxkbuKAmXQgYmUgdXNlZCBpbiBwbGFjZSBvZiBidXR0b25zIG9yIHJhZGlvIGJveGVzLmB9PC9wPlxuICAgIDxHdWlkZWxpbmVJbWFnZSBpbWFnZVVSTD17YCR7aW1hZ2VQYXRofS9TQy1ndWlkZWxpbmVzLTdAM3gucG5nYH0gY2xhc3NOYW1lPXtkZXRhaWxJbWFnZVN0eWxlfSBtZHhUeXBlPVwiR3VpZGVsaW5lSW1hZ2VcIiAvPlxuICAgIDxwPntgSWYgdXNpbmcgYm90aCBpY29ucyBhbmQgdGV4dCwgYmUgY29uc2lzdGVudCBhY3Jvc3MgZWFjaCBzZWdtZW50LmB9PC9wPlxuICAgIDxHdWlkZWxpbmVJbWFnZSBpbWFnZVVSTD17YCR7aW1hZ2VQYXRofS9TQy1ndWlkZWxpbmVzLThAM3gucG5nYH0gY2xhc3NOYW1lPXtkZXRhaWxJbWFnZVN0eWxlfSBtZHhUeXBlPVwiR3VpZGVsaW5lSW1hZ2VcIiAvPlxuICAgIDxwPntgTGltaXQgY29weSB3aXRoaW4gdGhlIHNlZ21lbnQgdG8gb25lIHRvIHR3byB3b3JkcyBhbmQgcHJpb3JpdGl6ZSBub3Vucy5gfTwvcD5cbiAgICA8R3VpZGVsaW5lSW1hZ2UgaW1hZ2VVUkw9e2Ake2ltYWdlUGF0aH0vU0MtZ3VpZGVsaW5lcy05QDN4LnBuZ2B9IGNsYXNzTmFtZT17ZGV0YWlsSW1hZ2VTdHlsZX0gbWR4VHlwZT1cIkd1aWRlbGluZUltYWdlXCIgLz5cbiAgICA8cD57YENvbnNpZGVyIGRpc2NvdmVyYWJpbGl0eSB3aGVuIGNob29zaW5nIGFsaWdubWVudC4gTGVmdC1hbGlnbmVkIGNvbXBvbmVudHMgZ2VuZXJhbGx5IG1vcmUgZGlzY292ZXJhYmxlIHRoYW4gcmlnaHQtYWxpZ25lZCBjb21wb25lbnRzLCBhbHRob3VnaCB0aGVyZSBtYXkgYmUgdXNlIGNhc2VzIGZvciBlYWNoLmB9PC9wPlxuICAgIDxHdWlkZWxpbmVJbWFnZSBpbWFnZVVSTD17YCR7aW1hZ2VQYXRofS9TQy1ndWlkZWxpbmVzLTEwQDN4LnBuZ2B9IGNsYXNzTmFtZT17dXNhZ2VJbWFnZVN0eWxlfSBtZHhUeXBlPVwiR3VpZGVsaW5lSW1hZ2VcIiAvPlxuICAgIDwvTURYTGF5b3V0Pjtcbn1cblxuO1xuTURYQ29udGVudC5pc01EWENvbXBvbmVudCA9IHRydWU7Il19 */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nvar h4 = /*#__PURE__*/Object(_emotion_css__WEBPACK_IMPORTED_MODULE_4__[\"css\"])(false ? undefined : {\n  name: \"1paezjs-h4\",\n  styles: \"margin:0px;label:h4;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hZGFtLnRob21wc29uL0RvY3VtZW50cy9HaXRIdWIvbGVhZnlncmVlbi11aS93ZWJzaXRlL3BhZ2VzL2NvbXBvbmVudC9zZWdtZW50ZWQtY29udHJvbC9ndWlkZWxpbmVzLm1keCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEyQmMiLCJmaWxlIjoiL1VzZXJzL2FkYW0udGhvbXBzb24vRG9jdW1lbnRzL0dpdEh1Yi9sZWFmeWdyZWVuLXVpL3dlYnNpdGUvcGFnZXMvY29tcG9uZW50L3NlZ21lbnRlZC1jb250cm9sL2d1aWRlbGluZXMubWR4Iiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBtZHggfSBmcm9tICdAbWR4LWpzL3JlYWN0J1xuXG4vKiBAanN4UnVudGltZSBjbGFzc2ljICovXG4vKiBAanN4IG1keCAqL1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vY3NzJztcbmltcG9ydCB7IEJvZHksIEgyLCBIMywgTGluayB9IGZyb20gJ0BsZWFmeWdyZWVuLXVpL3R5cG9ncmFwaHknO1xuaW1wb3J0IEd1aWRlbGluZUltYWdlIGZyb20gJ2NvbXBvbmVudHMvR3VpZGVsaW5lSW1hZ2UnO1xuaW1wb3J0IEd1aWRlbGluZUltYWdlRnJhbWUgZnJvbSAnY29tcG9uZW50cy9HdWlkZWxpbmVJbWFnZUZyYW1lJztcbmltcG9ydCB7IENETiB9IGZyb20gJ3V0aWxzL3JvdXRlcyc7XG5jb25zdCBpbWFnZVBhdGggPSBgJHtDRE59L2ltYWdlcy9uZXctZ3VpZGVsaW5lcy9zZWdtZW50ZWRDb250cm9sbGVyYDtcbmltcG9ydCBJY29uRG8gZnJvbSAnY29tcG9uZW50cy9pY29ucy9JY29uRG8nO1xuaW1wb3J0IEljb25Eb250IGZyb20gJ2NvbXBvbmVudHMvaWNvbnMvSWNvbkRvbnQnO1xuY29uc3QgZ2lmU3R5bGUgPSBjc3NgXG4gIHdpZHRoOiAzMjBweDtcbiAgaGVpZ2h0OiAyNzRweDtcbiAgb2JqZWN0LWZpdDogY292ZXI7XG5gO1xuY29uc3QgdXNhZ2VJbWFnZVN0eWxlID0gY3NzYFxuICB3aWR0aDogYXV0bztcbiAgaGVpZ2h0OiA0MDVweDtcbmA7XG5jb25zdCBkZXRhaWxJbWFnZVN0eWxlID0gY3NzYFxuICB3aWR0aDogYXV0bztcbiAgaGVpZ2h0OiAxMTBweDtcbmA7XG5jb25zdCBoNCA9IGNzc2BcbiAgbWFyZ2luOiAwcHg7XG5gO1xuY29uc3QgZG9Eb250U2VjdGlvbiA9IGNzc2BcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiA2NHB4IGF1dG87XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktaXRlbXM6IGNlbnRlcjtcbiAgbWFyZ2luOiAzMnB4IDBweDtcbiAgZ2FwOiAyNHB4IDE2cHg7XG5gO1xuY29uc3QgbGlzdFdyYXBwZXIgPSBjc3NgXG4gIGxpbmUtaGVpZ2h0OiAxLjVlbTtcbiAganVzdGlmeS1zZWxmOiBsZWZ0O1xuYDtcbmNvbnN0IHVsID0gY3NzYFxuICBtYXJnaW46IHVuc2V0O1xuYDtcblxuXG5jb25zdCBsYXlvdXRQcm9wcyA9IHtcbiAgXG59O1xuY29uc3QgTURYTGF5b3V0ID0gXCJ3cmFwcGVyXCJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoe1xuICBjb21wb25lbnRzLFxuICAuLi5wcm9wc1xufSkge1xuICByZXR1cm4gPE1EWExheW91dCB7Li4ubGF5b3V0UHJvcHN9IHsuLi5wcm9wc30gY29tcG9uZW50cz17Y29tcG9uZW50c30gbWR4VHlwZT1cIk1EWExheW91dFwiPlxuXG4gICAgPHA+e2BTZWdtZW50ZWQgY29udHJvbHMgYWN0IGFzIGEgdG9nZ2xlIGJldHdlZW4gYSBjdXJyZW50IHN0YXRlIGFuZCByZWxhdGVkIHN0YXRlcywgb2Z0ZW4gY2hhbmdpbmcgdGhlIHZpZXcgb2YgaW5mb3JtYXRpb24gd2l0aGluIGEgc2luZ2xlIHBhZ2UuYH08L3A+XG4gICAgPGRpdiBjbGFzc05hbWU9e2RvRG9udFNlY3Rpb259PlxuICA8SWNvbkRvIG1keFR5cGU9XCJJY29uRG9cIiAvPlxuICA8ZGl2IGNsYXNzTmFtZT17bGlzdFdyYXBwZXJ9PlxuICAgIFxuICAgIDxoNCBjbGFzc05hbWU9e2g0fT5TZWdtZW50ZWQgY29udHJvbHMgZG88L2g0PlxuICAgIDx1bCBjbGFzc05hbWU9e3VsfT5cbiAgICAgIDxsaT5SZWR1Y2UgY29nbml0aXZlIGxvYWQgYnkgc2hvd2luZyBhbGwgYXZhaWxhYmxlIG9wdGlvbnM8L2xpPlxuICAgICAgPGxpPkNoYW5nZSBzdGF0ZXMgd2l0aGluIGEgcGFnZTwvbGk+XG4gICAgICA8bGk+VG9nZ2xlIGJldHdlZW4gdHdvIHRvIGZpdmUgb3B0aW9ucyA8L2xpPlxuICAgIDwvdWw+XG4gIDwvZGl2PlxuICA8SWNvbkRvbnQgbWR4VHlwZT1cIkljb25Eb250XCIgLz5cbiAgPGRpdiBjbGFzc05hbWU9e2xpc3RXcmFwcGVyfT5cbiAgICA8aDQgY2xhc3NOYW1lPXtoNH0+U2VnbWVudGVkIGNvbnRyb2xzIGRvbid0PC9oND5cbiAgICA8dWwgY2xhc3NOYW1lPXt1bH0+XG4gICAgICA8bGk+TmF2aWdhdGUgYmV0d2VlbiBkaXN0aW5jdCBwYWdlczwvbGk+XG4gICAgICA8bGk+UmVwbGFjZSBidXR0b25zLCB0YWJzIG9yIHJhZGlvIGJveGVzPC9saT5cbiAgICAgIDxsaT5Db250YWluIGdyZWF0ZXIgdGhhbiBmaXZlIHNlZ21lbnRzIDwvbGk+XG4gICAgPC91bD5cbiAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICAgPGgxPntgV2hlbiB0byB1c2Ugc2VnbWVudGVkIGNvbnRyb2xzYH08L2gxPlxuICAgIDxoMj57YFVzZSBzZWdtZW50ZWQgY29udHJvbHMgdG8gdG9nZ2xlIHZpZXdzIHdpdGhpbiBhIHBhZ2VgfTwvaDI+XG4gICAgPHA+e2BGb3IgZXhhbXBsZSwgdG8gc3dpdGNoIGJldHdlZW4gY29kZSBhbmQgdGFibGUgdmlld3Mgb3IgZmlsdGVyIGRhdGEuYH08L3A+XG4gICAgPEd1aWRlbGluZUltYWdlIGltYWdlVXJsPXtgJHtpbWFnZVBhdGh9L1NDLWd1aWRlbGluZXMtR0lGLTEuZ2lmYH0gY2xhc3NOYW1lPXt1c2FnZUltYWdlU3R5bGV9IG1keFR5cGU9XCJHdWlkZWxpbmVJbWFnZVwiIC8+XG4gICAgPGgyPntgVXNlIHNlZ21lbnRlZCBjb250cm9scyBhcyBmaWx0ZXIgc2VsZWN0c2B9PC9oMj5cbiAgICA8cD57YFNlZ21lbnRlZCBjb250cm9scyBjYW4gc29tZXRpbWVzIGFjdCBhcyB0b2dnbGVzIHRvIGVuY291cmFnZSBjb21wYXJpc29uIGJldHdlZW4gdHlwZXMgb2Ygb3B0aW9ucywgZm9yIGV4YW1wbGUgYW5udWFsIGFuZCBtb250aGx5LiBIb3dldmVyLCB0aGV5IGFyZSBub3QgYSByZXBsYWNlbWVudCBmb3IgcmFkaW8gYm94ZXMgaW4gb3RoZXIgdXNlIGNhc2VzLmB9PC9wPlxuICAgIDxHdWlkZWxpbmVJbWFnZSBpbWFnZVVybD17YCR7aW1hZ2VQYXRofS9TQy1ndWlkZWxpbmVzLUdJRi0yLmdpZmB9IGNsYXNzTmFtZT17dXNhZ2VJbWFnZVN0eWxlfSBtZHhUeXBlPVwiR3VpZGVsaW5lSW1hZ2VcIiAvPlxuICAgIDxoMj57YFVzZSBzZWdtZW50ZWQgY29udHJvbHMgYXMgZmlsdGVyIHNlbGVjdHNgfTwvaDI+XG4gICAgPHA+e2BTZWdtZW50ZWQgY29udHJvbHMgYXJlIG9mdGVuIHVzZWQgdG8gdG9nZ2xlIHRocm91Z2ggdmlldyB0eXBlcyB3aXRoaW4gYSBzaW5nbGUgcGFnZS4gQ29uc2lkZXIgdXNpbmcgYH08TGluayBocmVmPVwiY29tcG9uZW50L3RhYnMvZ3VpZGVsaW5lc1wiIG1keFR5cGU9XCJMaW5rXCI+e2B0YWJzYH08L0xpbms+e2AgdG8gZmxpcCBiZXR3ZWVuIGRpc3RpbmN0IHBhZ2VzLmB9PC9wPlxuICAgIDxHdWlkZWxpbmVJbWFnZSBpbWFnZVVybD17YCR7aW1hZ2VQYXRofS9TQy1ndWlkZWxpbmVzLUdJRi0zLmdpZmB9IGNsYXNzTmFtZT17dXNhZ2VJbWFnZVN0eWxlfSBtZHhUeXBlPVwiR3VpZGVsaW5lSW1hZ2VcIiAvPlxuICAgIDxoMj57YEhvdyB0byB1c2Ugc2VnbWVudGVkIGNvbnRyb2xzYH08L2gyPlxuICAgIDxwPntgU2VnbWVudGVkIGNvbnRyb2xzIHNob3VsZCBjb250YWluIGJldHdlZW4gdHdvIGFuZCBmaXZlIGVxdWFsLXdpZHRoIHNlZ21lbnRzLiBUaGUgd2lkdGggb2YgZWFjaCBzZWdtZW50IHNob3VsZCBiZSBlcXVhbCB0byB0aGUgd2lkdGggb2YgdGhlIGxhcmdlc3Qgc2VnbWVudC5gfTwvcD5cbiAgICA8R3VpZGVsaW5lSW1hZ2UgaW1hZ2VVUkw9e2Ake2ltYWdlUGF0aH0vU0MtZ3VpZGVsaW5lcy00QDN4LnBuZ2B9IGNsYXNzTmFtZT17ZGV0YWlsSW1hZ2VTdHlsZX0gbWR4VHlwZT1cIkd1aWRlbGluZUltYWdlXCIgLz5cbiAgICA8cD57YEV4YWN0bHkgb25lIHNlZ21lbnQgaXMgYWx3YXlzIHNlbGVjdGVkLiBJZiBhIHN0YXRlIGlzIGhpZ2hlciBwcmlvcml0eSwgY29uc2lkZXIgbWFraW5nIGl0IHRoZSBkZWZhdWx0IHNlbGVjdGlvbi5gfTwvcD5cbiAgICA8R3VpZGVsaW5lSW1hZ2UgaW1hZ2VVUkw9e2Ake2ltYWdlUGF0aH0vU0MtZ3VpZGVsaW5lcy01QDN4LnBuZ2B9IGNsYXNzTmFtZT17ZGV0YWlsSW1hZ2VTdHlsZX0gbWR4VHlwZT1cIkd1aWRlbGluZUltYWdlXCIgLz5cbiAgICA8cD57YFVzZSBhbiBleHRlcm5hbCBsYWJlbCB0byBhdm9pZCBpbmNsdWRpbmcgdW5lY2Vzc2FyeSB3b3JkcyBpbnRvIHRoZSBzZWdtZW50cy5gfTwvcD5cbiAgICA8R3VpZGVsaW5lSW1hZ2UgaW1hZ2VVUkw9e2Ake2ltYWdlUGF0aH0vU0MtZ3VpZGVsaW5lcy02QDN4LnBuZ2B9IGNsYXNzTmFtZT17ZGV0YWlsSW1hZ2VTdHlsZX0gbWR4VHlwZT1cIkd1aWRlbGluZUltYWdlXCIgLz5cbiAgICA8cD57YFNlZ21lbnRlZCBjb250cm9scyBzaG91bGRu4oCZdCBiZSB1c2VkIGluIHBsYWNlIG9mIGJ1dHRvbnMgb3IgcmFkaW8gYm94ZXMuYH08L3A+XG4gICAgPEd1aWRlbGluZUltYWdlIGltYWdlVVJMPXtgJHtpbWFnZVBhdGh9L1NDLWd1aWRlbGluZXMtN0AzeC5wbmdgfSBjbGFzc05hbWU9e2RldGFpbEltYWdlU3R5bGV9IG1keFR5cGU9XCJHdWlkZWxpbmVJbWFnZVwiIC8+XG4gICAgPHA+e2BJZiB1c2luZyBib3RoIGljb25zIGFuZCB0ZXh0LCBiZSBjb25zaXN0ZW50IGFjcm9zcyBlYWNoIHNlZ21lbnQuYH08L3A+XG4gICAgPEd1aWRlbGluZUltYWdlIGltYWdlVVJMPXtgJHtpbWFnZVBhdGh9L1NDLWd1aWRlbGluZXMtOEAzeC5wbmdgfSBjbGFzc05hbWU9e2RldGFpbEltYWdlU3R5bGV9IG1keFR5cGU9XCJHdWlkZWxpbmVJbWFnZVwiIC8+XG4gICAgPHA+e2BMaW1pdCBjb3B5IHdpdGhpbiB0aGUgc2VnbWVudCB0byBvbmUgdG8gdHdvIHdvcmRzIGFuZCBwcmlvcml0aXplIG5vdW5zLmB9PC9wPlxuICAgIDxHdWlkZWxpbmVJbWFnZSBpbWFnZVVSTD17YCR7aW1hZ2VQYXRofS9TQy1ndWlkZWxpbmVzLTlAM3gucG5nYH0gY2xhc3NOYW1lPXtkZXRhaWxJbWFnZVN0eWxlfSBtZHhUeXBlPVwiR3VpZGVsaW5lSW1hZ2VcIiAvPlxuICAgIDxwPntgQ29uc2lkZXIgZGlzY292ZXJhYmlsaXR5IHdoZW4gY2hvb3NpbmcgYWxpZ25tZW50LiBMZWZ0LWFsaWduZWQgY29tcG9uZW50cyBnZW5lcmFsbHkgbW9yZSBkaXNjb3ZlcmFibGUgdGhhbiByaWdodC1hbGlnbmVkIGNvbXBvbmVudHMsIGFsdGhvdWdoIHRoZXJlIG1heSBiZSB1c2UgY2FzZXMgZm9yIGVhY2guYH08L3A+XG4gICAgPEd1aWRlbGluZUltYWdlIGltYWdlVVJMPXtgJHtpbWFnZVBhdGh9L1NDLWd1aWRlbGluZXMtMTBAM3gucG5nYH0gY2xhc3NOYW1lPXt1c2FnZUltYWdlU3R5bGV9IG1keFR5cGU9XCJHdWlkZWxpbmVJbWFnZVwiIC8+XG4gICAgPC9NRFhMYXlvdXQ+O1xufVxuXG47XG5NRFhDb250ZW50LmlzTURYQ29tcG9uZW50ID0gdHJ1ZTsiXX0= */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nvar doDontSection = /*#__PURE__*/Object(_emotion_css__WEBPACK_IMPORTED_MODULE_4__[\"css\"])(false ? undefined : {\n  name: \"13atuor-doDontSection\",\n  styles: \"display:grid;grid-template-columns:64px auto;align-items:center;justify-items:center;margin:32px 0px;gap:24px 16px;label:doDontSection;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hZGFtLnRob21wc29uL0RvY3VtZW50cy9HaXRIdWIvbGVhZnlncmVlbi11aS93ZWJzaXRlL3BhZ2VzL2NvbXBvbmVudC9zZWdtZW50ZWQtY29udHJvbC9ndWlkZWxpbmVzLm1keCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE4QnlCIiwiZmlsZSI6Ii9Vc2Vycy9hZGFtLnRob21wc29uL0RvY3VtZW50cy9HaXRIdWIvbGVhZnlncmVlbi11aS93ZWJzaXRlL3BhZ2VzL2NvbXBvbmVudC9zZWdtZW50ZWQtY29udHJvbC9ndWlkZWxpbmVzLm1keCIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgbWR4IH0gZnJvbSAnQG1keC1qcy9yZWFjdCdcblxuLyogQGpzeFJ1bnRpbWUgY2xhc3NpYyAqL1xuLyogQGpzeCBtZHggKi9cbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2Nzcyc7XG5pbXBvcnQgeyBCb2R5LCBIMiwgSDMsIExpbmsgfSBmcm9tICdAbGVhZnlncmVlbi11aS90eXBvZ3JhcGh5JztcbmltcG9ydCBHdWlkZWxpbmVJbWFnZSBmcm9tICdjb21wb25lbnRzL0d1aWRlbGluZUltYWdlJztcbmltcG9ydCBHdWlkZWxpbmVJbWFnZUZyYW1lIGZyb20gJ2NvbXBvbmVudHMvR3VpZGVsaW5lSW1hZ2VGcmFtZSc7XG5pbXBvcnQgeyBDRE4gfSBmcm9tICd1dGlscy9yb3V0ZXMnO1xuY29uc3QgaW1hZ2VQYXRoID0gYCR7Q0ROfS9pbWFnZXMvbmV3LWd1aWRlbGluZXMvc2VnbWVudGVkQ29udHJvbGxlcmA7XG5pbXBvcnQgSWNvbkRvIGZyb20gJ2NvbXBvbmVudHMvaWNvbnMvSWNvbkRvJztcbmltcG9ydCBJY29uRG9udCBmcm9tICdjb21wb25lbnRzL2ljb25zL0ljb25Eb250JztcbmNvbnN0IGdpZlN0eWxlID0gY3NzYFxuICB3aWR0aDogMzIwcHg7XG4gIGhlaWdodDogMjc0cHg7XG4gIG9iamVjdC1maXQ6IGNvdmVyO1xuYDtcbmNvbnN0IHVzYWdlSW1hZ2VTdHlsZSA9IGNzc2BcbiAgd2lkdGg6IGF1dG87XG4gIGhlaWdodDogNDA1cHg7XG5gO1xuY29uc3QgZGV0YWlsSW1hZ2VTdHlsZSA9IGNzc2BcbiAgd2lkdGg6IGF1dG87XG4gIGhlaWdodDogMTEwcHg7XG5gO1xuY29uc3QgaDQgPSBjc3NgXG4gIG1hcmdpbjogMHB4O1xuYDtcbmNvbnN0IGRvRG9udFNlY3Rpb24gPSBjc3NgXG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogNjRweCBhdXRvO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWl0ZW1zOiBjZW50ZXI7XG4gIG1hcmdpbjogMzJweCAwcHg7XG4gIGdhcDogMjRweCAxNnB4O1xuYDtcbmNvbnN0IGxpc3RXcmFwcGVyID0gY3NzYFxuICBsaW5lLWhlaWdodDogMS41ZW07XG4gIGp1c3RpZnktc2VsZjogbGVmdDtcbmA7XG5jb25zdCB1bCA9IGNzc2BcbiAgbWFyZ2luOiB1bnNldDtcbmA7XG5cblxuY29uc3QgbGF5b3V0UHJvcHMgPSB7XG4gIFxufTtcbmNvbnN0IE1EWExheW91dCA9IFwid3JhcHBlclwiXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHtcbiAgY29tcG9uZW50cyxcbiAgLi4ucHJvcHNcbn0pIHtcbiAgcmV0dXJuIDxNRFhMYXlvdXQgey4uLmxheW91dFByb3BzfSB7Li4ucHJvcHN9IGNvbXBvbmVudHM9e2NvbXBvbmVudHN9IG1keFR5cGU9XCJNRFhMYXlvdXRcIj5cblxuICAgIDxwPntgU2VnbWVudGVkIGNvbnRyb2xzIGFjdCBhcyBhIHRvZ2dsZSBiZXR3ZWVuIGEgY3VycmVudCBzdGF0ZSBhbmQgcmVsYXRlZCBzdGF0ZXMsIG9mdGVuIGNoYW5naW5nIHRoZSB2aWV3IG9mIGluZm9ybWF0aW9uIHdpdGhpbiBhIHNpbmdsZSBwYWdlLmB9PC9wPlxuICAgIDxkaXYgY2xhc3NOYW1lPXtkb0RvbnRTZWN0aW9ufT5cbiAgPEljb25EbyBtZHhUeXBlPVwiSWNvbkRvXCIgLz5cbiAgPGRpdiBjbGFzc05hbWU9e2xpc3RXcmFwcGVyfT5cbiAgICBcbiAgICA8aDQgY2xhc3NOYW1lPXtoNH0+U2VnbWVudGVkIGNvbnRyb2xzIGRvPC9oND5cbiAgICA8dWwgY2xhc3NOYW1lPXt1bH0+XG4gICAgICA8bGk+UmVkdWNlIGNvZ25pdGl2ZSBsb2FkIGJ5IHNob3dpbmcgYWxsIGF2YWlsYWJsZSBvcHRpb25zPC9saT5cbiAgICAgIDxsaT5DaGFuZ2Ugc3RhdGVzIHdpdGhpbiBhIHBhZ2U8L2xpPlxuICAgICAgPGxpPlRvZ2dsZSBiZXR3ZWVuIHR3byB0byBmaXZlIG9wdGlvbnMgPC9saT5cbiAgICA8L3VsPlxuICA8L2Rpdj5cbiAgPEljb25Eb250IG1keFR5cGU9XCJJY29uRG9udFwiIC8+XG4gIDxkaXYgY2xhc3NOYW1lPXtsaXN0V3JhcHBlcn0+XG4gICAgPGg0IGNsYXNzTmFtZT17aDR9PlNlZ21lbnRlZCBjb250cm9scyBkb24ndDwvaDQ+XG4gICAgPHVsIGNsYXNzTmFtZT17dWx9PlxuICAgICAgPGxpPk5hdmlnYXRlIGJldHdlZW4gZGlzdGluY3QgcGFnZXM8L2xpPlxuICAgICAgPGxpPlJlcGxhY2UgYnV0dG9ucywgdGFicyBvciByYWRpbyBib3hlczwvbGk+XG4gICAgICA8bGk+Q29udGFpbiBncmVhdGVyIHRoYW4gZml2ZSBzZWdtZW50cyA8L2xpPlxuICAgIDwvdWw+XG4gIDwvZGl2PlxuICAgIDwvZGl2PlxuICAgIDxoMT57YFdoZW4gdG8gdXNlIHNlZ21lbnRlZCBjb250cm9sc2B9PC9oMT5cbiAgICA8aDI+e2BVc2Ugc2VnbWVudGVkIGNvbnRyb2xzIHRvIHRvZ2dsZSB2aWV3cyB3aXRoaW4gYSBwYWdlYH08L2gyPlxuICAgIDxwPntgRm9yIGV4YW1wbGUsIHRvIHN3aXRjaCBiZXR3ZWVuIGNvZGUgYW5kIHRhYmxlIHZpZXdzIG9yIGZpbHRlciBkYXRhLmB9PC9wPlxuICAgIDxHdWlkZWxpbmVJbWFnZSBpbWFnZVVybD17YCR7aW1hZ2VQYXRofS9TQy1ndWlkZWxpbmVzLUdJRi0xLmdpZmB9IGNsYXNzTmFtZT17dXNhZ2VJbWFnZVN0eWxlfSBtZHhUeXBlPVwiR3VpZGVsaW5lSW1hZ2VcIiAvPlxuICAgIDxoMj57YFVzZSBzZWdtZW50ZWQgY29udHJvbHMgYXMgZmlsdGVyIHNlbGVjdHNgfTwvaDI+XG4gICAgPHA+e2BTZWdtZW50ZWQgY29udHJvbHMgY2FuIHNvbWV0aW1lcyBhY3QgYXMgdG9nZ2xlcyB0byBlbmNvdXJhZ2UgY29tcGFyaXNvbiBiZXR3ZWVuIHR5cGVzIG9mIG9wdGlvbnMsIGZvciBleGFtcGxlIGFubnVhbCBhbmQgbW9udGhseS4gSG93ZXZlciwgdGhleSBhcmUgbm90IGEgcmVwbGFjZW1lbnQgZm9yIHJhZGlvIGJveGVzIGluIG90aGVyIHVzZSBjYXNlcy5gfTwvcD5cbiAgICA8R3VpZGVsaW5lSW1hZ2UgaW1hZ2VVcmw9e2Ake2ltYWdlUGF0aH0vU0MtZ3VpZGVsaW5lcy1HSUYtMi5naWZgfSBjbGFzc05hbWU9e3VzYWdlSW1hZ2VTdHlsZX0gbWR4VHlwZT1cIkd1aWRlbGluZUltYWdlXCIgLz5cbiAgICA8aDI+e2BVc2Ugc2VnbWVudGVkIGNvbnRyb2xzIGFzIGZpbHRlciBzZWxlY3RzYH08L2gyPlxuICAgIDxwPntgU2VnbWVudGVkIGNvbnRyb2xzIGFyZSBvZnRlbiB1c2VkIHRvIHRvZ2dsZSB0aHJvdWdoIHZpZXcgdHlwZXMgd2l0aGluIGEgc2luZ2xlIHBhZ2UuIENvbnNpZGVyIHVzaW5nIGB9PExpbmsgaHJlZj1cImNvbXBvbmVudC90YWJzL2d1aWRlbGluZXNcIiBtZHhUeXBlPVwiTGlua1wiPntgdGFic2B9PC9MaW5rPntgIHRvIGZsaXAgYmV0d2VlbiBkaXN0aW5jdCBwYWdlcy5gfTwvcD5cbiAgICA8R3VpZGVsaW5lSW1hZ2UgaW1hZ2VVcmw9e2Ake2ltYWdlUGF0aH0vU0MtZ3VpZGVsaW5lcy1HSUYtMy5naWZgfSBjbGFzc05hbWU9e3VzYWdlSW1hZ2VTdHlsZX0gbWR4VHlwZT1cIkd1aWRlbGluZUltYWdlXCIgLz5cbiAgICA8aDI+e2BIb3cgdG8gdXNlIHNlZ21lbnRlZCBjb250cm9sc2B9PC9oMj5cbiAgICA8cD57YFNlZ21lbnRlZCBjb250cm9scyBzaG91bGQgY29udGFpbiBiZXR3ZWVuIHR3byBhbmQgZml2ZSBlcXVhbC13aWR0aCBzZWdtZW50cy4gVGhlIHdpZHRoIG9mIGVhY2ggc2VnbWVudCBzaG91bGQgYmUgZXF1YWwgdG8gdGhlIHdpZHRoIG9mIHRoZSBsYXJnZXN0IHNlZ21lbnQuYH08L3A+XG4gICAgPEd1aWRlbGluZUltYWdlIGltYWdlVVJMPXtgJHtpbWFnZVBhdGh9L1NDLWd1aWRlbGluZXMtNEAzeC5wbmdgfSBjbGFzc05hbWU9e2RldGFpbEltYWdlU3R5bGV9IG1keFR5cGU9XCJHdWlkZWxpbmVJbWFnZVwiIC8+XG4gICAgPHA+e2BFeGFjdGx5IG9uZSBzZWdtZW50IGlzIGFsd2F5cyBzZWxlY3RlZC4gSWYgYSBzdGF0ZSBpcyBoaWdoZXIgcHJpb3JpdHksIGNvbnNpZGVyIG1ha2luZyBpdCB0aGUgZGVmYXVsdCBzZWxlY3Rpb24uYH08L3A+XG4gICAgPEd1aWRlbGluZUltYWdlIGltYWdlVVJMPXtgJHtpbWFnZVBhdGh9L1NDLWd1aWRlbGluZXMtNUAzeC5wbmdgfSBjbGFzc05hbWU9e2RldGFpbEltYWdlU3R5bGV9IG1keFR5cGU9XCJHdWlkZWxpbmVJbWFnZVwiIC8+XG4gICAgPHA+e2BVc2UgYW4gZXh0ZXJuYWwgbGFiZWwgdG8gYXZvaWQgaW5jbHVkaW5nIHVuZWNlc3Nhcnkgd29yZHMgaW50byB0aGUgc2VnbWVudHMuYH08L3A+XG4gICAgPEd1aWRlbGluZUltYWdlIGltYWdlVVJMPXtgJHtpbWFnZVBhdGh9L1NDLWd1aWRlbGluZXMtNkAzeC5wbmdgfSBjbGFzc05hbWU9e2RldGFpbEltYWdlU3R5bGV9IG1keFR5cGU9XCJHdWlkZWxpbmVJbWFnZVwiIC8+XG4gICAgPHA+e2BTZWdtZW50ZWQgY29udHJvbHMgc2hvdWxkbuKAmXQgYmUgdXNlZCBpbiBwbGFjZSBvZiBidXR0b25zIG9yIHJhZGlvIGJveGVzLmB9PC9wPlxuICAgIDxHdWlkZWxpbmVJbWFnZSBpbWFnZVVSTD17YCR7aW1hZ2VQYXRofS9TQy1ndWlkZWxpbmVzLTdAM3gucG5nYH0gY2xhc3NOYW1lPXtkZXRhaWxJbWFnZVN0eWxlfSBtZHhUeXBlPVwiR3VpZGVsaW5lSW1hZ2VcIiAvPlxuICAgIDxwPntgSWYgdXNpbmcgYm90aCBpY29ucyBhbmQgdGV4dCwgYmUgY29uc2lzdGVudCBhY3Jvc3MgZWFjaCBzZWdtZW50LmB9PC9wPlxuICAgIDxHdWlkZWxpbmVJbWFnZSBpbWFnZVVSTD17YCR7aW1hZ2VQYXRofS9TQy1ndWlkZWxpbmVzLThAM3gucG5nYH0gY2xhc3NOYW1lPXtkZXRhaWxJbWFnZVN0eWxlfSBtZHhUeXBlPVwiR3VpZGVsaW5lSW1hZ2VcIiAvPlxuICAgIDxwPntgTGltaXQgY29weSB3aXRoaW4gdGhlIHNlZ21lbnQgdG8gb25lIHRvIHR3byB3b3JkcyBhbmQgcHJpb3JpdGl6ZSBub3Vucy5gfTwvcD5cbiAgICA8R3VpZGVsaW5lSW1hZ2UgaW1hZ2VVUkw9e2Ake2ltYWdlUGF0aH0vU0MtZ3VpZGVsaW5lcy05QDN4LnBuZ2B9IGNsYXNzTmFtZT17ZGV0YWlsSW1hZ2VTdHlsZX0gbWR4VHlwZT1cIkd1aWRlbGluZUltYWdlXCIgLz5cbiAgICA8cD57YENvbnNpZGVyIGRpc2NvdmVyYWJpbGl0eSB3aGVuIGNob29zaW5nIGFsaWdubWVudC4gTGVmdC1hbGlnbmVkIGNvbXBvbmVudHMgZ2VuZXJhbGx5IG1vcmUgZGlzY292ZXJhYmxlIHRoYW4gcmlnaHQtYWxpZ25lZCBjb21wb25lbnRzLCBhbHRob3VnaCB0aGVyZSBtYXkgYmUgdXNlIGNhc2VzIGZvciBlYWNoLmB9PC9wPlxuICAgIDxHdWlkZWxpbmVJbWFnZSBpbWFnZVVSTD17YCR7aW1hZ2VQYXRofS9TQy1ndWlkZWxpbmVzLTEwQDN4LnBuZ2B9IGNsYXNzTmFtZT17dXNhZ2VJbWFnZVN0eWxlfSBtZHhUeXBlPVwiR3VpZGVsaW5lSW1hZ2VcIiAvPlxuICAgIDwvTURYTGF5b3V0Pjtcbn1cblxuO1xuTURYQ29udGVudC5pc01EWENvbXBvbmVudCA9IHRydWU7Il19 */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nvar listWrapper = /*#__PURE__*/Object(_emotion_css__WEBPACK_IMPORTED_MODULE_4__[\"css\"])(false ? undefined : {\n  name: \"qo2wc9-listWrapper\",\n  styles: \"line-height:1.5em;justify-self:left;label:listWrapper;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hZGFtLnRob21wc29uL0RvY3VtZW50cy9HaXRIdWIvbGVhZnlncmVlbi11aS93ZWJzaXRlL3BhZ2VzL2NvbXBvbmVudC9zZWdtZW50ZWQtY29udHJvbC9ndWlkZWxpbmVzLm1keCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFzQ3VCIiwiZmlsZSI6Ii9Vc2Vycy9hZGFtLnRob21wc29uL0RvY3VtZW50cy9HaXRIdWIvbGVhZnlncmVlbi11aS93ZWJzaXRlL3BhZ2VzL2NvbXBvbmVudC9zZWdtZW50ZWQtY29udHJvbC9ndWlkZWxpbmVzLm1keCIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgbWR4IH0gZnJvbSAnQG1keC1qcy9yZWFjdCdcblxuLyogQGpzeFJ1bnRpbWUgY2xhc3NpYyAqL1xuLyogQGpzeCBtZHggKi9cbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2Nzcyc7XG5pbXBvcnQgeyBCb2R5LCBIMiwgSDMsIExpbmsgfSBmcm9tICdAbGVhZnlncmVlbi11aS90eXBvZ3JhcGh5JztcbmltcG9ydCBHdWlkZWxpbmVJbWFnZSBmcm9tICdjb21wb25lbnRzL0d1aWRlbGluZUltYWdlJztcbmltcG9ydCBHdWlkZWxpbmVJbWFnZUZyYW1lIGZyb20gJ2NvbXBvbmVudHMvR3VpZGVsaW5lSW1hZ2VGcmFtZSc7XG5pbXBvcnQgeyBDRE4gfSBmcm9tICd1dGlscy9yb3V0ZXMnO1xuY29uc3QgaW1hZ2VQYXRoID0gYCR7Q0ROfS9pbWFnZXMvbmV3LWd1aWRlbGluZXMvc2VnbWVudGVkQ29udHJvbGxlcmA7XG5pbXBvcnQgSWNvbkRvIGZyb20gJ2NvbXBvbmVudHMvaWNvbnMvSWNvbkRvJztcbmltcG9ydCBJY29uRG9udCBmcm9tICdjb21wb25lbnRzL2ljb25zL0ljb25Eb250JztcbmNvbnN0IGdpZlN0eWxlID0gY3NzYFxuICB3aWR0aDogMzIwcHg7XG4gIGhlaWdodDogMjc0cHg7XG4gIG9iamVjdC1maXQ6IGNvdmVyO1xuYDtcbmNvbnN0IHVzYWdlSW1hZ2VTdHlsZSA9IGNzc2BcbiAgd2lkdGg6IGF1dG87XG4gIGhlaWdodDogNDA1cHg7XG5gO1xuY29uc3QgZGV0YWlsSW1hZ2VTdHlsZSA9IGNzc2BcbiAgd2lkdGg6IGF1dG87XG4gIGhlaWdodDogMTEwcHg7XG5gO1xuY29uc3QgaDQgPSBjc3NgXG4gIG1hcmdpbjogMHB4O1xuYDtcbmNvbnN0IGRvRG9udFNlY3Rpb24gPSBjc3NgXG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogNjRweCBhdXRvO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWl0ZW1zOiBjZW50ZXI7XG4gIG1hcmdpbjogMzJweCAwcHg7XG4gIGdhcDogMjRweCAxNnB4O1xuYDtcbmNvbnN0IGxpc3RXcmFwcGVyID0gY3NzYFxuICBsaW5lLWhlaWdodDogMS41ZW07XG4gIGp1c3RpZnktc2VsZjogbGVmdDtcbmA7XG5jb25zdCB1bCA9IGNzc2BcbiAgbWFyZ2luOiB1bnNldDtcbmA7XG5cblxuY29uc3QgbGF5b3V0UHJvcHMgPSB7XG4gIFxufTtcbmNvbnN0IE1EWExheW91dCA9IFwid3JhcHBlclwiXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHtcbiAgY29tcG9uZW50cyxcbiAgLi4ucHJvcHNcbn0pIHtcbiAgcmV0dXJuIDxNRFhMYXlvdXQgey4uLmxheW91dFByb3BzfSB7Li4ucHJvcHN9IGNvbXBvbmVudHM9e2NvbXBvbmVudHN9IG1keFR5cGU9XCJNRFhMYXlvdXRcIj5cblxuICAgIDxwPntgU2VnbWVudGVkIGNvbnRyb2xzIGFjdCBhcyBhIHRvZ2dsZSBiZXR3ZWVuIGEgY3VycmVudCBzdGF0ZSBhbmQgcmVsYXRlZCBzdGF0ZXMsIG9mdGVuIGNoYW5naW5nIHRoZSB2aWV3IG9mIGluZm9ybWF0aW9uIHdpdGhpbiBhIHNpbmdsZSBwYWdlLmB9PC9wPlxuICAgIDxkaXYgY2xhc3NOYW1lPXtkb0RvbnRTZWN0aW9ufT5cbiAgPEljb25EbyBtZHhUeXBlPVwiSWNvbkRvXCIgLz5cbiAgPGRpdiBjbGFzc05hbWU9e2xpc3RXcmFwcGVyfT5cbiAgICBcbiAgICA8aDQgY2xhc3NOYW1lPXtoNH0+U2VnbWVudGVkIGNvbnRyb2xzIGRvPC9oND5cbiAgICA8dWwgY2xhc3NOYW1lPXt1bH0+XG4gICAgICA8bGk+UmVkdWNlIGNvZ25pdGl2ZSBsb2FkIGJ5IHNob3dpbmcgYWxsIGF2YWlsYWJsZSBvcHRpb25zPC9saT5cbiAgICAgIDxsaT5DaGFuZ2Ugc3RhdGVzIHdpdGhpbiBhIHBhZ2U8L2xpPlxuICAgICAgPGxpPlRvZ2dsZSBiZXR3ZWVuIHR3byB0byBmaXZlIG9wdGlvbnMgPC9saT5cbiAgICA8L3VsPlxuICA8L2Rpdj5cbiAgPEljb25Eb250IG1keFR5cGU9XCJJY29uRG9udFwiIC8+XG4gIDxkaXYgY2xhc3NOYW1lPXtsaXN0V3JhcHBlcn0+XG4gICAgPGg0IGNsYXNzTmFtZT17aDR9PlNlZ21lbnRlZCBjb250cm9scyBkb24ndDwvaDQ+XG4gICAgPHVsIGNsYXNzTmFtZT17dWx9PlxuICAgICAgPGxpPk5hdmlnYXRlIGJldHdlZW4gZGlzdGluY3QgcGFnZXM8L2xpPlxuICAgICAgPGxpPlJlcGxhY2UgYnV0dG9ucywgdGFicyBvciByYWRpbyBib3hlczwvbGk+XG4gICAgICA8bGk+Q29udGFpbiBncmVhdGVyIHRoYW4gZml2ZSBzZWdtZW50cyA8L2xpPlxuICAgIDwvdWw+XG4gIDwvZGl2PlxuICAgIDwvZGl2PlxuICAgIDxoMT57YFdoZW4gdG8gdXNlIHNlZ21lbnRlZCBjb250cm9sc2B9PC9oMT5cbiAgICA8aDI+e2BVc2Ugc2VnbWVudGVkIGNvbnRyb2xzIHRvIHRvZ2dsZSB2aWV3cyB3aXRoaW4gYSBwYWdlYH08L2gyPlxuICAgIDxwPntgRm9yIGV4YW1wbGUsIHRvIHN3aXRjaCBiZXR3ZWVuIGNvZGUgYW5kIHRhYmxlIHZpZXdzIG9yIGZpbHRlciBkYXRhLmB9PC9wPlxuICAgIDxHdWlkZWxpbmVJbWFnZSBpbWFnZVVybD17YCR7aW1hZ2VQYXRofS9TQy1ndWlkZWxpbmVzLUdJRi0xLmdpZmB9IGNsYXNzTmFtZT17dXNhZ2VJbWFnZVN0eWxlfSBtZHhUeXBlPVwiR3VpZGVsaW5lSW1hZ2VcIiAvPlxuICAgIDxoMj57YFVzZSBzZWdtZW50ZWQgY29udHJvbHMgYXMgZmlsdGVyIHNlbGVjdHNgfTwvaDI+XG4gICAgPHA+e2BTZWdtZW50ZWQgY29udHJvbHMgY2FuIHNvbWV0aW1lcyBhY3QgYXMgdG9nZ2xlcyB0byBlbmNvdXJhZ2UgY29tcGFyaXNvbiBiZXR3ZWVuIHR5cGVzIG9mIG9wdGlvbnMsIGZvciBleGFtcGxlIGFubnVhbCBhbmQgbW9udGhseS4gSG93ZXZlciwgdGhleSBhcmUgbm90IGEgcmVwbGFjZW1lbnQgZm9yIHJhZGlvIGJveGVzIGluIG90aGVyIHVzZSBjYXNlcy5gfTwvcD5cbiAgICA8R3VpZGVsaW5lSW1hZ2UgaW1hZ2VVcmw9e2Ake2ltYWdlUGF0aH0vU0MtZ3VpZGVsaW5lcy1HSUYtMi5naWZgfSBjbGFzc05hbWU9e3VzYWdlSW1hZ2VTdHlsZX0gbWR4VHlwZT1cIkd1aWRlbGluZUltYWdlXCIgLz5cbiAgICA8aDI+e2BVc2Ugc2VnbWVudGVkIGNvbnRyb2xzIGFzIGZpbHRlciBzZWxlY3RzYH08L2gyPlxuICAgIDxwPntgU2VnbWVudGVkIGNvbnRyb2xzIGFyZSBvZnRlbiB1c2VkIHRvIHRvZ2dsZSB0aHJvdWdoIHZpZXcgdHlwZXMgd2l0aGluIGEgc2luZ2xlIHBhZ2UuIENvbnNpZGVyIHVzaW5nIGB9PExpbmsgaHJlZj1cImNvbXBvbmVudC90YWJzL2d1aWRlbGluZXNcIiBtZHhUeXBlPVwiTGlua1wiPntgdGFic2B9PC9MaW5rPntgIHRvIGZsaXAgYmV0d2VlbiBkaXN0aW5jdCBwYWdlcy5gfTwvcD5cbiAgICA8R3VpZGVsaW5lSW1hZ2UgaW1hZ2VVcmw9e2Ake2ltYWdlUGF0aH0vU0MtZ3VpZGVsaW5lcy1HSUYtMy5naWZgfSBjbGFzc05hbWU9e3VzYWdlSW1hZ2VTdHlsZX0gbWR4VHlwZT1cIkd1aWRlbGluZUltYWdlXCIgLz5cbiAgICA8aDI+e2BIb3cgdG8gdXNlIHNlZ21lbnRlZCBjb250cm9sc2B9PC9oMj5cbiAgICA8cD57YFNlZ21lbnRlZCBjb250cm9scyBzaG91bGQgY29udGFpbiBiZXR3ZWVuIHR3byBhbmQgZml2ZSBlcXVhbC13aWR0aCBzZWdtZW50cy4gVGhlIHdpZHRoIG9mIGVhY2ggc2VnbWVudCBzaG91bGQgYmUgZXF1YWwgdG8gdGhlIHdpZHRoIG9mIHRoZSBsYXJnZXN0IHNlZ21lbnQuYH08L3A+XG4gICAgPEd1aWRlbGluZUltYWdlIGltYWdlVVJMPXtgJHtpbWFnZVBhdGh9L1NDLWd1aWRlbGluZXMtNEAzeC5wbmdgfSBjbGFzc05hbWU9e2RldGFpbEltYWdlU3R5bGV9IG1keFR5cGU9XCJHdWlkZWxpbmVJbWFnZVwiIC8+XG4gICAgPHA+e2BFeGFjdGx5IG9uZSBzZWdtZW50IGlzIGFsd2F5cyBzZWxlY3RlZC4gSWYgYSBzdGF0ZSBpcyBoaWdoZXIgcHJpb3JpdHksIGNvbnNpZGVyIG1ha2luZyBpdCB0aGUgZGVmYXVsdCBzZWxlY3Rpb24uYH08L3A+XG4gICAgPEd1aWRlbGluZUltYWdlIGltYWdlVVJMPXtgJHtpbWFnZVBhdGh9L1NDLWd1aWRlbGluZXMtNUAzeC5wbmdgfSBjbGFzc05hbWU9e2RldGFpbEltYWdlU3R5bGV9IG1keFR5cGU9XCJHdWlkZWxpbmVJbWFnZVwiIC8+XG4gICAgPHA+e2BVc2UgYW4gZXh0ZXJuYWwgbGFiZWwgdG8gYXZvaWQgaW5jbHVkaW5nIHVuZWNlc3Nhcnkgd29yZHMgaW50byB0aGUgc2VnbWVudHMuYH08L3A+XG4gICAgPEd1aWRlbGluZUltYWdlIGltYWdlVVJMPXtgJHtpbWFnZVBhdGh9L1NDLWd1aWRlbGluZXMtNkAzeC5wbmdgfSBjbGFzc05hbWU9e2RldGFpbEltYWdlU3R5bGV9IG1keFR5cGU9XCJHdWlkZWxpbmVJbWFnZVwiIC8+XG4gICAgPHA+e2BTZWdtZW50ZWQgY29udHJvbHMgc2hvdWxkbuKAmXQgYmUgdXNlZCBpbiBwbGFjZSBvZiBidXR0b25zIG9yIHJhZGlvIGJveGVzLmB9PC9wPlxuICAgIDxHdWlkZWxpbmVJbWFnZSBpbWFnZVVSTD17YCR7aW1hZ2VQYXRofS9TQy1ndWlkZWxpbmVzLTdAM3gucG5nYH0gY2xhc3NOYW1lPXtkZXRhaWxJbWFnZVN0eWxlfSBtZHhUeXBlPVwiR3VpZGVsaW5lSW1hZ2VcIiAvPlxuICAgIDxwPntgSWYgdXNpbmcgYm90aCBpY29ucyBhbmQgdGV4dCwgYmUgY29uc2lzdGVudCBhY3Jvc3MgZWFjaCBzZWdtZW50LmB9PC9wPlxuICAgIDxHdWlkZWxpbmVJbWFnZSBpbWFnZVVSTD17YCR7aW1hZ2VQYXRofS9TQy1ndWlkZWxpbmVzLThAM3gucG5nYH0gY2xhc3NOYW1lPXtkZXRhaWxJbWFnZVN0eWxlfSBtZHhUeXBlPVwiR3VpZGVsaW5lSW1hZ2VcIiAvPlxuICAgIDxwPntgTGltaXQgY29weSB3aXRoaW4gdGhlIHNlZ21lbnQgdG8gb25lIHRvIHR3byB3b3JkcyBhbmQgcHJpb3JpdGl6ZSBub3Vucy5gfTwvcD5cbiAgICA8R3VpZGVsaW5lSW1hZ2UgaW1hZ2VVUkw9e2Ake2ltYWdlUGF0aH0vU0MtZ3VpZGVsaW5lcy05QDN4LnBuZ2B9IGNsYXNzTmFtZT17ZGV0YWlsSW1hZ2VTdHlsZX0gbWR4VHlwZT1cIkd1aWRlbGluZUltYWdlXCIgLz5cbiAgICA8cD57YENvbnNpZGVyIGRpc2NvdmVyYWJpbGl0eSB3aGVuIGNob29zaW5nIGFsaWdubWVudC4gTGVmdC1hbGlnbmVkIGNvbXBvbmVudHMgZ2VuZXJhbGx5IG1vcmUgZGlzY292ZXJhYmxlIHRoYW4gcmlnaHQtYWxpZ25lZCBjb21wb25lbnRzLCBhbHRob3VnaCB0aGVyZSBtYXkgYmUgdXNlIGNhc2VzIGZvciBlYWNoLmB9PC9wPlxuICAgIDxHdWlkZWxpbmVJbWFnZSBpbWFnZVVSTD17YCR7aW1hZ2VQYXRofS9TQy1ndWlkZWxpbmVzLTEwQDN4LnBuZ2B9IGNsYXNzTmFtZT17dXNhZ2VJbWFnZVN0eWxlfSBtZHhUeXBlPVwiR3VpZGVsaW5lSW1hZ2VcIiAvPlxuICAgIDwvTURYTGF5b3V0Pjtcbn1cblxuO1xuTURYQ29udGVudC5pc01EWENvbXBvbmVudCA9IHRydWU7Il19 */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nvar ul = /*#__PURE__*/Object(_emotion_css__WEBPACK_IMPORTED_MODULE_4__[\"css\"])(false ? undefined : {\n  name: \"1129kb0-ul\",\n  styles: \"margin:unset;label:ul;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hZGFtLnRob21wc29uL0RvY3VtZW50cy9HaXRIdWIvbGVhZnlncmVlbi11aS93ZWJzaXRlL3BhZ2VzL2NvbXBvbmVudC9zZWdtZW50ZWQtY29udHJvbC9ndWlkZWxpbmVzLm1keCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEwQ2MiLCJmaWxlIjoiL1VzZXJzL2FkYW0udGhvbXBzb24vRG9jdW1lbnRzL0dpdEh1Yi9sZWFmeWdyZWVuLXVpL3dlYnNpdGUvcGFnZXMvY29tcG9uZW50L3NlZ21lbnRlZC1jb250cm9sL2d1aWRlbGluZXMubWR4Iiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBtZHggfSBmcm9tICdAbWR4LWpzL3JlYWN0J1xuXG4vKiBAanN4UnVudGltZSBjbGFzc2ljICovXG4vKiBAanN4IG1keCAqL1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vY3NzJztcbmltcG9ydCB7IEJvZHksIEgyLCBIMywgTGluayB9IGZyb20gJ0BsZWFmeWdyZWVuLXVpL3R5cG9ncmFwaHknO1xuaW1wb3J0IEd1aWRlbGluZUltYWdlIGZyb20gJ2NvbXBvbmVudHMvR3VpZGVsaW5lSW1hZ2UnO1xuaW1wb3J0IEd1aWRlbGluZUltYWdlRnJhbWUgZnJvbSAnY29tcG9uZW50cy9HdWlkZWxpbmVJbWFnZUZyYW1lJztcbmltcG9ydCB7IENETiB9IGZyb20gJ3V0aWxzL3JvdXRlcyc7XG5jb25zdCBpbWFnZVBhdGggPSBgJHtDRE59L2ltYWdlcy9uZXctZ3VpZGVsaW5lcy9zZWdtZW50ZWRDb250cm9sbGVyYDtcbmltcG9ydCBJY29uRG8gZnJvbSAnY29tcG9uZW50cy9pY29ucy9JY29uRG8nO1xuaW1wb3J0IEljb25Eb250IGZyb20gJ2NvbXBvbmVudHMvaWNvbnMvSWNvbkRvbnQnO1xuY29uc3QgZ2lmU3R5bGUgPSBjc3NgXG4gIHdpZHRoOiAzMjBweDtcbiAgaGVpZ2h0OiAyNzRweDtcbiAgb2JqZWN0LWZpdDogY292ZXI7XG5gO1xuY29uc3QgdXNhZ2VJbWFnZVN0eWxlID0gY3NzYFxuICB3aWR0aDogYXV0bztcbiAgaGVpZ2h0OiA0MDVweDtcbmA7XG5jb25zdCBkZXRhaWxJbWFnZVN0eWxlID0gY3NzYFxuICB3aWR0aDogYXV0bztcbiAgaGVpZ2h0OiAxMTBweDtcbmA7XG5jb25zdCBoNCA9IGNzc2BcbiAgbWFyZ2luOiAwcHg7XG5gO1xuY29uc3QgZG9Eb250U2VjdGlvbiA9IGNzc2BcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiA2NHB4IGF1dG87XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktaXRlbXM6IGNlbnRlcjtcbiAgbWFyZ2luOiAzMnB4IDBweDtcbiAgZ2FwOiAyNHB4IDE2cHg7XG5gO1xuY29uc3QgbGlzdFdyYXBwZXIgPSBjc3NgXG4gIGxpbmUtaGVpZ2h0OiAxLjVlbTtcbiAganVzdGlmeS1zZWxmOiBsZWZ0O1xuYDtcbmNvbnN0IHVsID0gY3NzYFxuICBtYXJnaW46IHVuc2V0O1xuYDtcblxuXG5jb25zdCBsYXlvdXRQcm9wcyA9IHtcbiAgXG59O1xuY29uc3QgTURYTGF5b3V0ID0gXCJ3cmFwcGVyXCJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoe1xuICBjb21wb25lbnRzLFxuICAuLi5wcm9wc1xufSkge1xuICByZXR1cm4gPE1EWExheW91dCB7Li4ubGF5b3V0UHJvcHN9IHsuLi5wcm9wc30gY29tcG9uZW50cz17Y29tcG9uZW50c30gbWR4VHlwZT1cIk1EWExheW91dFwiPlxuXG4gICAgPHA+e2BTZWdtZW50ZWQgY29udHJvbHMgYWN0IGFzIGEgdG9nZ2xlIGJldHdlZW4gYSBjdXJyZW50IHN0YXRlIGFuZCByZWxhdGVkIHN0YXRlcywgb2Z0ZW4gY2hhbmdpbmcgdGhlIHZpZXcgb2YgaW5mb3JtYXRpb24gd2l0aGluIGEgc2luZ2xlIHBhZ2UuYH08L3A+XG4gICAgPGRpdiBjbGFzc05hbWU9e2RvRG9udFNlY3Rpb259PlxuICA8SWNvbkRvIG1keFR5cGU9XCJJY29uRG9cIiAvPlxuICA8ZGl2IGNsYXNzTmFtZT17bGlzdFdyYXBwZXJ9PlxuICAgIFxuICAgIDxoNCBjbGFzc05hbWU9e2g0fT5TZWdtZW50ZWQgY29udHJvbHMgZG88L2g0PlxuICAgIDx1bCBjbGFzc05hbWU9e3VsfT5cbiAgICAgIDxsaT5SZWR1Y2UgY29nbml0aXZlIGxvYWQgYnkgc2hvd2luZyBhbGwgYXZhaWxhYmxlIG9wdGlvbnM8L2xpPlxuICAgICAgPGxpPkNoYW5nZSBzdGF0ZXMgd2l0aGluIGEgcGFnZTwvbGk+XG4gICAgICA8bGk+VG9nZ2xlIGJldHdlZW4gdHdvIHRvIGZpdmUgb3B0aW9ucyA8L2xpPlxuICAgIDwvdWw+XG4gIDwvZGl2PlxuICA8SWNvbkRvbnQgbWR4VHlwZT1cIkljb25Eb250XCIgLz5cbiAgPGRpdiBjbGFzc05hbWU9e2xpc3RXcmFwcGVyfT5cbiAgICA8aDQgY2xhc3NOYW1lPXtoNH0+U2VnbWVudGVkIGNvbnRyb2xzIGRvbid0PC9oND5cbiAgICA8dWwgY2xhc3NOYW1lPXt1bH0+XG4gICAgICA8bGk+TmF2aWdhdGUgYmV0d2VlbiBkaXN0aW5jdCBwYWdlczwvbGk+XG4gICAgICA8bGk+UmVwbGFjZSBidXR0b25zLCB0YWJzIG9yIHJhZGlvIGJveGVzPC9saT5cbiAgICAgIDxsaT5Db250YWluIGdyZWF0ZXIgdGhhbiBmaXZlIHNlZ21lbnRzIDwvbGk+XG4gICAgPC91bD5cbiAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICAgPGgxPntgV2hlbiB0byB1c2Ugc2VnbWVudGVkIGNvbnRyb2xzYH08L2gxPlxuICAgIDxoMj57YFVzZSBzZWdtZW50ZWQgY29udHJvbHMgdG8gdG9nZ2xlIHZpZXdzIHdpdGhpbiBhIHBhZ2VgfTwvaDI+XG4gICAgPHA+e2BGb3IgZXhhbXBsZSwgdG8gc3dpdGNoIGJldHdlZW4gY29kZSBhbmQgdGFibGUgdmlld3Mgb3IgZmlsdGVyIGRhdGEuYH08L3A+XG4gICAgPEd1aWRlbGluZUltYWdlIGltYWdlVXJsPXtgJHtpbWFnZVBhdGh9L1NDLWd1aWRlbGluZXMtR0lGLTEuZ2lmYH0gY2xhc3NOYW1lPXt1c2FnZUltYWdlU3R5bGV9IG1keFR5cGU9XCJHdWlkZWxpbmVJbWFnZVwiIC8+XG4gICAgPGgyPntgVXNlIHNlZ21lbnRlZCBjb250cm9scyBhcyBmaWx0ZXIgc2VsZWN0c2B9PC9oMj5cbiAgICA8cD57YFNlZ21lbnRlZCBjb250cm9scyBjYW4gc29tZXRpbWVzIGFjdCBhcyB0b2dnbGVzIHRvIGVuY291cmFnZSBjb21wYXJpc29uIGJldHdlZW4gdHlwZXMgb2Ygb3B0aW9ucywgZm9yIGV4YW1wbGUgYW5udWFsIGFuZCBtb250aGx5LiBIb3dldmVyLCB0aGV5IGFyZSBub3QgYSByZXBsYWNlbWVudCBmb3IgcmFkaW8gYm94ZXMgaW4gb3RoZXIgdXNlIGNhc2VzLmB9PC9wPlxuICAgIDxHdWlkZWxpbmVJbWFnZSBpbWFnZVVybD17YCR7aW1hZ2VQYXRofS9TQy1ndWlkZWxpbmVzLUdJRi0yLmdpZmB9IGNsYXNzTmFtZT17dXNhZ2VJbWFnZVN0eWxlfSBtZHhUeXBlPVwiR3VpZGVsaW5lSW1hZ2VcIiAvPlxuICAgIDxoMj57YFVzZSBzZWdtZW50ZWQgY29udHJvbHMgYXMgZmlsdGVyIHNlbGVjdHNgfTwvaDI+XG4gICAgPHA+e2BTZWdtZW50ZWQgY29udHJvbHMgYXJlIG9mdGVuIHVzZWQgdG8gdG9nZ2xlIHRocm91Z2ggdmlldyB0eXBlcyB3aXRoaW4gYSBzaW5nbGUgcGFnZS4gQ29uc2lkZXIgdXNpbmcgYH08TGluayBocmVmPVwiY29tcG9uZW50L3RhYnMvZ3VpZGVsaW5lc1wiIG1keFR5cGU9XCJMaW5rXCI+e2B0YWJzYH08L0xpbms+e2AgdG8gZmxpcCBiZXR3ZWVuIGRpc3RpbmN0IHBhZ2VzLmB9PC9wPlxuICAgIDxHdWlkZWxpbmVJbWFnZSBpbWFnZVVybD17YCR7aW1hZ2VQYXRofS9TQy1ndWlkZWxpbmVzLUdJRi0zLmdpZmB9IGNsYXNzTmFtZT17dXNhZ2VJbWFnZVN0eWxlfSBtZHhUeXBlPVwiR3VpZGVsaW5lSW1hZ2VcIiAvPlxuICAgIDxoMj57YEhvdyB0byB1c2Ugc2VnbWVudGVkIGNvbnRyb2xzYH08L2gyPlxuICAgIDxwPntgU2VnbWVudGVkIGNvbnRyb2xzIHNob3VsZCBjb250YWluIGJldHdlZW4gdHdvIGFuZCBmaXZlIGVxdWFsLXdpZHRoIHNlZ21lbnRzLiBUaGUgd2lkdGggb2YgZWFjaCBzZWdtZW50IHNob3VsZCBiZSBlcXVhbCB0byB0aGUgd2lkdGggb2YgdGhlIGxhcmdlc3Qgc2VnbWVudC5gfTwvcD5cbiAgICA8R3VpZGVsaW5lSW1hZ2UgaW1hZ2VVUkw9e2Ake2ltYWdlUGF0aH0vU0MtZ3VpZGVsaW5lcy00QDN4LnBuZ2B9IGNsYXNzTmFtZT17ZGV0YWlsSW1hZ2VTdHlsZX0gbWR4VHlwZT1cIkd1aWRlbGluZUltYWdlXCIgLz5cbiAgICA8cD57YEV4YWN0bHkgb25lIHNlZ21lbnQgaXMgYWx3YXlzIHNlbGVjdGVkLiBJZiBhIHN0YXRlIGlzIGhpZ2hlciBwcmlvcml0eSwgY29uc2lkZXIgbWFraW5nIGl0IHRoZSBkZWZhdWx0IHNlbGVjdGlvbi5gfTwvcD5cbiAgICA8R3VpZGVsaW5lSW1hZ2UgaW1hZ2VVUkw9e2Ake2ltYWdlUGF0aH0vU0MtZ3VpZGVsaW5lcy01QDN4LnBuZ2B9IGNsYXNzTmFtZT17ZGV0YWlsSW1hZ2VTdHlsZX0gbWR4VHlwZT1cIkd1aWRlbGluZUltYWdlXCIgLz5cbiAgICA8cD57YFVzZSBhbiBleHRlcm5hbCBsYWJlbCB0byBhdm9pZCBpbmNsdWRpbmcgdW5lY2Vzc2FyeSB3b3JkcyBpbnRvIHRoZSBzZWdtZW50cy5gfTwvcD5cbiAgICA8R3VpZGVsaW5lSW1hZ2UgaW1hZ2VVUkw9e2Ake2ltYWdlUGF0aH0vU0MtZ3VpZGVsaW5lcy02QDN4LnBuZ2B9IGNsYXNzTmFtZT17ZGV0YWlsSW1hZ2VTdHlsZX0gbWR4VHlwZT1cIkd1aWRlbGluZUltYWdlXCIgLz5cbiAgICA8cD57YFNlZ21lbnRlZCBjb250cm9scyBzaG91bGRu4oCZdCBiZSB1c2VkIGluIHBsYWNlIG9mIGJ1dHRvbnMgb3IgcmFkaW8gYm94ZXMuYH08L3A+XG4gICAgPEd1aWRlbGluZUltYWdlIGltYWdlVVJMPXtgJHtpbWFnZVBhdGh9L1NDLWd1aWRlbGluZXMtN0AzeC5wbmdgfSBjbGFzc05hbWU9e2RldGFpbEltYWdlU3R5bGV9IG1keFR5cGU9XCJHdWlkZWxpbmVJbWFnZVwiIC8+XG4gICAgPHA+e2BJZiB1c2luZyBib3RoIGljb25zIGFuZCB0ZXh0LCBiZSBjb25zaXN0ZW50IGFjcm9zcyBlYWNoIHNlZ21lbnQuYH08L3A+XG4gICAgPEd1aWRlbGluZUltYWdlIGltYWdlVVJMPXtgJHtpbWFnZVBhdGh9L1NDLWd1aWRlbGluZXMtOEAzeC5wbmdgfSBjbGFzc05hbWU9e2RldGFpbEltYWdlU3R5bGV9IG1keFR5cGU9XCJHdWlkZWxpbmVJbWFnZVwiIC8+XG4gICAgPHA+e2BMaW1pdCBjb3B5IHdpdGhpbiB0aGUgc2VnbWVudCB0byBvbmUgdG8gdHdvIHdvcmRzIGFuZCBwcmlvcml0aXplIG5vdW5zLmB9PC9wPlxuICAgIDxHdWlkZWxpbmVJbWFnZSBpbWFnZVVSTD17YCR7aW1hZ2VQYXRofS9TQy1ndWlkZWxpbmVzLTlAM3gucG5nYH0gY2xhc3NOYW1lPXtkZXRhaWxJbWFnZVN0eWxlfSBtZHhUeXBlPVwiR3VpZGVsaW5lSW1hZ2VcIiAvPlxuICAgIDxwPntgQ29uc2lkZXIgZGlzY292ZXJhYmlsaXR5IHdoZW4gY2hvb3NpbmcgYWxpZ25tZW50LiBMZWZ0LWFsaWduZWQgY29tcG9uZW50cyBnZW5lcmFsbHkgbW9yZSBkaXNjb3ZlcmFibGUgdGhhbiByaWdodC1hbGlnbmVkIGNvbXBvbmVudHMsIGFsdGhvdWdoIHRoZXJlIG1heSBiZSB1c2UgY2FzZXMgZm9yIGVhY2guYH08L3A+XG4gICAgPEd1aWRlbGluZUltYWdlIGltYWdlVVJMPXtgJHtpbWFnZVBhdGh9L1NDLWd1aWRlbGluZXMtMTBAM3gucG5nYH0gY2xhc3NOYW1lPXt1c2FnZUltYWdlU3R5bGV9IG1keFR5cGU9XCJHdWlkZWxpbmVJbWFnZVwiIC8+XG4gICAgPC9NRFhMYXlvdXQ+O1xufVxuXG47XG5NRFhDb250ZW50LmlzTURYQ29tcG9uZW50ID0gdHJ1ZTsiXX0= */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = Object(_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_ref, [\"components\"]);\n\n  return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(MDXLayout, Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 10\n    }\n  }), Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, \"Segmented controls act as a toggle between a current state and related states, often changing the view of information within a single page.\"), Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"div\", {\n    className: doDontSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(components_icons_IconDo__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n    mdxType: \"IconDo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 3\n    }\n  }), Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"div\", {\n    className: listWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 3\n    }\n  }, Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h4\", {\n    className: h4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, \"Segmented controls do\"), Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"ul\", {\n    className: ul,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, \"Reduce cognitive load by showing all available options\"), Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, \"Change states within a page\"), Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, \"Toggle between two to five options \"))), Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(components_icons_IconDont__WEBPACK_IMPORTED_MODULE_10__[\"default\"], {\n    mdxType: \"IconDont\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 3\n    }\n  }), Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"div\", {\n    className: listWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 3\n    }\n  }, Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h4\", {\n    className: h4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, \"Segmented controls don't\"), Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"ul\", {\n    className: ul,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, \"Navigate between distinct pages\"), Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, \"Replace buttons, tabs or radio boxes\"), Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, \"Contain greater than five segments \")))), Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, \"When to use segmented controls\"), Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, \"Use segmented controls to toggle views within a page\"), Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, \"For example, to switch between code and table views or filter data.\"), Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(components_GuidelineImage__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n    imageUrl: \"\".concat(imagePath, \"/SC-guidelines-GIF-1.gif\"),\n    className: usageImageStyle,\n    mdxType: \"GuidelineImage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }), Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, \"Use segmented controls as filter selects\"), Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, \"Segmented controls can sometimes act as toggles to encourage comparison between types of options, for example annual and monthly. However, they are not a replacement for radio boxes in other use cases.\"), Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(components_GuidelineImage__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n    imageUrl: \"\".concat(imagePath, \"/SC-guidelines-GIF-2.gif\"),\n    className: usageImageStyle,\n    mdxType: \"GuidelineImage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }), Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, \"Use segmented controls as filter selects\"), Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, \"Segmented controls are often used to toggle through view types within a single page. Consider using \", Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(_leafygreen_ui_typography__WEBPACK_IMPORTED_MODULE_5__[\"Link\"], {\n    href: \"component/tabs/guidelines\",\n    mdxType: \"Link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 112\n    }\n  }, \"tabs\"), \" to flip between distinct pages.\"), Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(components_GuidelineImage__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n    imageUrl: \"\".concat(imagePath, \"/SC-guidelines-GIF-3.gif\"),\n    className: usageImageStyle,\n    mdxType: \"GuidelineImage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }), Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, \"How to use segmented controls\"), Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, \"Segmented controls should contain between two and five equal-width segments. The width of each segment should be equal to the width of the largest segment.\"), Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(components_GuidelineImage__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n    imageURL: \"\".concat(imagePath, \"/SC-guidelines-4@3x.png\"),\n    className: detailImageStyle,\n    mdxType: \"GuidelineImage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }), Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, \"Exactly one segment is always selected. If a state is higher priority, consider making it the default selection.\"), Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(components_GuidelineImage__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n    imageURL: \"\".concat(imagePath, \"/SC-guidelines-5@3x.png\"),\n    className: detailImageStyle,\n    mdxType: \"GuidelineImage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }), Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, \"Use an external label to avoid including unecessary words into the segments.\"), Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(components_GuidelineImage__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n    imageURL: \"\".concat(imagePath, \"/SC-guidelines-6@3x.png\"),\n    className: detailImageStyle,\n    mdxType: \"GuidelineImage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }), Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, \"Segmented controls shouldn\\u2019t be used in place of buttons or radio boxes.\"), Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(components_GuidelineImage__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n    imageURL: \"\".concat(imagePath, \"/SC-guidelines-7@3x.png\"),\n    className: detailImageStyle,\n    mdxType: \"GuidelineImage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }), Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, \"If using both icons and text, be consistent across each segment.\"), Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(components_GuidelineImage__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n    imageURL: \"\".concat(imagePath, \"/SC-guidelines-8@3x.png\"),\n    className: detailImageStyle,\n    mdxType: \"GuidelineImage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }), Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, \"Limit copy within the segment to one to two words and prioritize nouns.\"), Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(components_GuidelineImage__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n    imageURL: \"\".concat(imagePath, \"/SC-guidelines-9@3x.png\"),\n    className: detailImageStyle,\n    mdxType: \"GuidelineImage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }), Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, \"Consider discoverability when choosing alignment. Left-aligned components generally more discoverable than right-aligned components, although there may be use cases for each.\"), Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(components_GuidelineImage__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n    imageURL: \"\".concat(imagePath, \"/SC-guidelines-10@3x.png\"),\n    className: usageImageStyle,\n    mdxType: \"GuidelineImage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }));\n}\n_c = MDXContent;\n;\nMDXContent.isMDXComponent = true;\n\nvar _c;\n\n$RefreshReg$(_c, \"MDXContent\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../node_modules/next/node_modules/webpack/buildin/harmony-module.js */ \"../node_modules/next/node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/component/segmented-control/guidelines.mdx\n");

/***/ })

})